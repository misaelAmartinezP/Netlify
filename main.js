var datass = '';
var DataArr = [];
var apellidoPa = '';
var apellidoMa = '';
var nombres = '';
var guardaRFC = ""; //guarda RFC
var guardaRaSo = "";//guarda razon social
var guardaCodPos = "";//guarda codigo postal
var guardaNomVia = "";//guarda nombre de vialidad
var guardaNumExt = "";//guarda numero exterior
var guardaNumInt = "";//guarda numero interior
var guardaNomCol = "";//guarda nombre de la colonia
var guardaDemTer = "";//guarda demarcacion territorial o municipio
var guardaRegimenCapitalDes = "";//guarda regimenCapDescripcion para persona fisica  
var guardaRegimenCapitaRaSo = "";//guarda regimenCapRaSo para persona fisica 
var guardaReg = "";//guarda regimen
var guardaIdProveedor = "";//guarda idProveedor
var query = ""; //guarda query 
var guardaBanco = "";//guarda nombre del banco
var guardaClabe = "";//guardaClabe bancaria
var guardaCtaBancaria = ""; //guarda cuenta bancaria
var guardaCtaConta1 = ""; //guarda cuenta contable
var guardaCtaConta2 = ""; //guarda cuenta contable
var guardaCtaAnt1 = ""; //guarda cunenta anticipo
var guardaCtaAnt2 = ""; //guarda cunenta anticipo 
var queryCtas = "";//guarda el query de las cuentas 
var queryAnt = "";//guarda el query de las cuentas de anticipo 
var generaIds = "";//añade los valores para el query 


alert("Llenar primero los datos bancarios")
PDFJS.workerSrc = '';

//extraccion del pdf
function ExtractText() {
    var input = document.getElementById("file-id");
    var fReader = new FileReader();
    fReader.readAsDataURL(input.files[0]);
    // console.log(input.files[0]);
    fReader.onloadend = function (event) {
        convertDataURIToBinary(event.target.result);
    }
}
var BASE64_MARKER = ';base64,';
function convertDataURIToBinary(dataURI) {
    var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;
    var base64 = dataURI.substring(base64Index);
    var raw = window.atob(base64);
    var rawLength = raw.length;
    var array = new Uint8Array(new ArrayBuffer(rawLength));
    for (var i = 0; i < rawLength; i++) {
        array[i] = raw.charCodeAt(i);
    }
    pdfAsArray(array)
}
function getPageText(pageNum, PDFDocumentInstance) {
    return new Promise(function (resolve, reject) {
        PDFDocumentInstance.getPage(pageNum).then(function (pdfPage) {
            pdfPage.getTextContent().then(function (textContent) {
                var textItems = textContent.items;
                var finalString = "";
                for (var i = 0; i < textItems.length; i++) {
                    var item = textItems[i];
                    finalString += item.str + " "; //separador
                }
                resolve(finalString);
            });
        });
    });
}
function pdfAsArray(pdfAsArray) {
    PDFJS.getDocument(pdfAsArray).then(function (pdf) {
        var pdfDocument = pdf;
        var pagesPromises = [];
        for (var i = 0; i < pdf.pdfInfo.numPages; i++) {
            (function (pageNumber) {
                pagesPromises.push(getPageText(pageNumber, pdfDocument));
            })(i + 1);
        }
        Promise.all(pagesPromises).then(function (pagesText) {
            document.getElementById("output").innerHTML = ("DATOS PARA EL QUERY<br/>");
            let arr = (pagesText);
            srtPdf = (arr.toString());
            parceoDatos(srtPdf);                                    //imprime las funciones
            var outputStr = "";
            for (var pageNum = 0; pageNum < pagesText.length; pageNum++) {
                outputStr = "";
                outputStr = "<br/><br/>Page " + (pageNum + 1) + " contents <br/> <br/>";
                //var div = document.getElementById('output');
                //div.innerHTML += (outputStr + pagesText[pageNum]);//esta linea de codigo se encarga de imprimir el contenido del archivo 
                outputStr = "";
                outputStr = "<br/><br/>Page " + (pageNum + 1) + " contents <br/> <br/>";
                //var div = document.getElementById('output');
                //div.innerHTML += ("");//esta linea de codigo se encarga de imprimir el contenido del archivo 
            }
        });
    }, function (reason) {
        console.error(reason);
    });
}
//terimina extraccion del pdf
function parceoDatos(string) {
    separaDatos = string.split(" ");
    //console.log(separaDatos);
    //extraeRFC(separaDatos); 
    guardaRFC = extraeRFC(separaDatos);//guarda RFC
    guardaRaSo = extraeRaSo(separaDatos, guardaRFC);    //extraeRaSo(separaDatos);//guarda razon social
    guardaCodPos = extraeCodPos(separaDatos);    //extraeCodPos(separaDatos);//guarda codigo postal
    guardaNomVia = extraeNomVia(separaDatos);    //extraeNomVia(separaDatos);//guarda nombre de vialidad
    guardaNumExt = extraeNumExt(separaDatos);    //extraeNumExt(separaDatos);//guarda numero exterior
    guardaNumInt = extraeNumInt(separaDatos);    //extraeNumInt(separaDatos);//guarda numero interior
    guardaNomCol = extraeNomCol(separaDatos);    //extraeNomCol(separaDatos);//guarda nombre de la colonia
    guardaDemTer = extraeDemTer(separaDatos);    //extraeDemTer(separaDatos);//guarda demarcacion territorial o municipio
    guardaReg = extraeReg(separaDatos);   //extraeReg(separaDatos);//guarda regimen 
    guradaGenCod = creaGenCod(extraeRaSoAux(separaDatos), extraeRFCAux(separaDatos));//generacion y guardado del codigo
    guardaPersonaMoral = personaMoral(extraeRFCAux(separaDatos));//determina 1 o 0 para campo personaMoral
    guardaBancoSat = bancoSat(guardaBanco);//este es la Clave que da el SAT
    guardaIdBancoSat = idBancoSat(guardaBanco);//este es de nuestro catalogo
    guardaPersonaFisNom = personaFisNom(separaDatos, extraeRFCAux(separaDatos));//nombre para persona fisica 
    gaurdaPersonaFisApPa = personaFisApPa(separaDatos, extraeRFCAux(separaDatos));//primer apellido para persona fisica 
    gaurdaPersonaFisApMa = personaFisApMa(separaDatos, extraeRFCAux(separaDatos));//segundo apellido para persona fisica 
    guardaIdCiudad = idCiudad(extraeCodPosAux(separaDatos)); //genera id cidad
    guardaRegimenCapitalDes = regimenCapDescripcion(separaDatos, extraeRFCAux(separaDatos));//regimen capital para persona morales descripcion
    guardaRegimenCapitaRaSo = regimenCapitalRaSo(separaDatos, extraeRFCAux(separaDatos));//regimen capital para personas morales razon social 
    guardaTipoOracion = descripcionTipOracion(gaurdaPersonaFisApPa, gaurdaPersonaFisApMa, guardaPersonaFisNom, guardaRaSo, guardaRFC, guardaRegimenCapitalDes)//tipo oracion
    //query="set identity_insert InmobiliariaCaboBallena.dbo.AcProveedores on insert into InmobiliariaCaboBallena.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT)values   (9999, 'CISMEDMIGUMXN', 'extraeRaSo', NULL, 2, 'CIMM6909298U9', idCiudad, '5 DE FEBRERO, MANZANA 129, LOTE 13', 'RICARDO FLORES MAGON', '39700', 'ACAPULCO DE JUAREZ', Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) set identity_insert mmartinez.dbo.AcProveedores off";

    //generando el query                                                   //idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT, TipoDeCuentaCASH, ConceptoCIECASH, ReferenciaCIECASH, ConvenioCIECASH, NumRegIdFiscal, PlazaBanxico, IdPais, IdClaveTransferencia, Nacionalidad, Sucursal, IdCuentaPagoEnEspecie, IdCuentaOtrasRetenciones

    guardaQueryCtas = querysCtas(extraeRFCAux(separaDatos), guardaTipoOracion, /*guardaCtaConta1, guardaCtaConta2, guardaCtaAnt1, guardaCtaAnt2,*/ guardaRaSo);//datos del query de cuentas 
    generaIds = "use InmobiliariaCaboBallena \ndeclare @idpro int \ndeclare @idctas int \ndeclare @numcta varchar(15) \nset @idpro = (select MAX(InmobiliariaCaboBallena.dbo.AcProveedores.idProveedor) from InmobiliariaCaboBallena.dbo.AcProveedores); \n    set @idctas = (select MAX(InmobiliariaCaboBallena.dbo.CtbCuentas.idCuenta) from InmobiliariaCaboBallena.dbo.CtbCuentas); \n set @numcta = ((select cuenta from InmobiliariaCaboBallena.dbo.CtbCuentas where idCuenta =@idctas) -11801010000 + 1);"

    query = generaIds + "\n" + queryCtas + "\n" + queryAnt + " \n set identity_insert InmobiliariaCaboBallena.dbo.AcProveedores on \n insert into InmobiliariaCaboBallena.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT, TipoDeCuentaCASH, ConceptoCIECASH, ReferenciaCIECASH, ConvenioCIECASH, NumRegIdFiscal, PlazaBanxico, IdPais, IdClaveTransferencia, Nacionalidad, Sucursal, IdCuentaPagoEnEspecie, IdCuentaOtrasRetenciones) \n select  @idpro+1,'" + guradaGenCod + "','" + guardaRaSo + " " + guardaRegimenCapitaRaSo + "',NULL,2,'" + guardaRFC + "','" + guardaIdCiudad + "','" + guardaNomVia + ", " + guardaNumExt + ", " + guardaNumInt + "','" + guardaNomCol + "','" + guardaCodPos + "','" + guardaDemTer + "'" + ",'NULL', 'NULL', 'NULL', 0, 0, 0, 0, 0, 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 6,'" + guardaPersonaFisNom + "','" + gaurdaPersonaFisApPa + "', '" + gaurdaPersonaFisApMa + "', 'NULL', 'NULL', 'NULL'," + guardaPersonaMoral + ", 'NULL', 'NULL', 0,  @idctas+1, @idctas+2, NULL, NULL, 0,'" + guardaClabe + "','" + guardaBanco + "', '1', '4', '0', 'NULL', 'NULL', NULL, 0, '" + guardaCtaBancaria + "'," + guardaIdBancoSat + ",'MXN','" + guardaBancoSat + "', '', 'NULL', 'NULL', 'NULL', 'NULL', 'NULL', 6853, NULL, 'NULL', 'NULL', NULL, NULL \n where not exists (select Codigo from InmobiliariaCaboBallena.dbo.AcProveedores where Codigo='" + guradaGenCod + "') \n set identity_insert InmobiliariaCaboBallena.dbo.AcProveedores off \n " + querytotal + " \n ";
    //console.log(query);
}
function creaGenCod(string, string1) {//funcion para generar el codigo 
    difPer = string1.length;//variable para diferenciar entre persona fisica y moral  
    //console.log(difPer);// ver si es persona fisica o moral
    cadMaInf = string.split(' ');//recibe el contenido que devulve extraeRaSoAux
    //console.log(cadMaInf);//ver contenido de cadMaInf
    arrAux = [];//arreglo auxiliar vacio para guardar las palabras de las razones sociales 
    if ((difPer) == 12) {//si es persona moral
        //console.log("persona moral");//recorrido de las palabras para discriminar los espacios vacios
        for (i = 0; i < cadMaInf.length; i++) {//recorrido para evitar los espacios en blanco 
            if (cadMaInf[i] != '') {//mientras que sea diferente a espacio en blanco lo imprimimos 
                if (cadMaInf[i] != 'DE') {//si la palabra es 'DE' se omite 
                    if (cadMaInf[i] != 'EL') {//si la palabra es 'EL' se omite 
                        if (cadMaInf[i] != 'LA') {//si la palabra es 'LA' se omite 
                            if (cadMaInf[i] != 'LOS') {//si la palabra es 'LOS' se omite 
                                if (cadMaInf[i] != 'LAS') {//si la palabra es 'LAS' se omite 
                                    if (cadMaInf[i] != 'Y') {
                                        //console.log("estamos en los if anidados");//comprobacion de funcionamiento de los ifs
                                        // console.log(cadMaInf[i]); //variable para ver el contenido de 
                                        //console.log(cadMaInf[i].substring(0, 3));//prueba para extraer solo 3 caracteres de la palabra
                                        arrAux.push(cadMaInf[i]);//manda todos los valores que hayan sido diferentes a los antes omitidos por los if y los guarda en arrAux
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if ((difPer) == 13) {//si es persona fisica
        //console.log("soy persona fisica");
        for (i = 0; i < cadMaInf.length; i++) {//recorrido de las palabras para discriminar los espacios vacios
            if (cadMaInf[i] != '') { //omite los espacios en blanco 
                // console.log(cadMaInf[i]); //variable para ver el contenido de 
                //console.log(cadMaInf[i].substring(0, 3));//prueba para extraer solo 3 caracteres de la palabra
                arrAux.push(cadMaInf[i]);//enviar los datos para guardarlos en el arrAux
                if (arrAux[i] == undefined) {//si hay un valor undefined termina el for 
                    break
                }
            }
        }
    }
    //console.log(arrAux);//ver el contenido de arrAux
    //arrCodigo.push(cadMaInf[i].substring(0, 3));//con esta extraemos las tres primeras letras de cada palabra
    if ((difPer) == 12) {//si es persona moral
        if ((arrAux.length) >= 3) {//contamos las paralabras que tiene arrAux y si este es 3 o mayor a tres se hara 
            car3p = arrAux[0].substring(0, 3);//variable que guarda y extrae las 3 primeras letras de la primer palabra
            //console.log(car3p);//ver el contenido de la variable car3p
            car3s = arrAux[1].substring(0, 3);//variable que guarda y extrae las 3 primeras letras de la segunda palabra
            //console.log(car3s);//ver el contenido de la variable car3p
            car4t = arrAux[2].substring(0, 4);//variable que guarda y extrae las 4 primeras letras de la tercer palabra
            //console.log(car4t);//ver el contenido de la variable car3p
            codGen = (car3p + car3s + car4t + "MXN");//codigo listo, generacion del codigo 
            //console.log(codGen);//imprime el codigo
        }
        if ((arrAux.length) == 2) {
            car3p = arrAux[0].substring(0, 3);//variable que guarda y extrae las 3 primeras letras de la primer palabra
            //console.log(car3p);//ver el contenido de la variable car3p
            car3s = arrAux[1].substring(0, 3);//variable que guarda y extrae las 3 primeras letras de la segunda palabra
            //console.log(car3s);//ver el contenido de la variable car3p
            codGen = (car3p + car3s + "????MXN");//codigo listo, generacion del codigo 
            //console.log(codGen);//imprime el codigo
        }
    }
    else if ((difPer) == 13) {//si es persona fisica 
        if ((arrAux.length) == 4) {//si la longitud de la palabra es igual a 4 
            car3Ap = arrAux[2].substring(0, 3);//apellido paterno 3 primeros caracteres 
            //console.log(car3Ap);//ver el contenido de la variable
            car3Am = arrAux[3].substring(0, 3); //apellido materno 3 primeros caracteres
            //console.log(car3Am);//ver el contenido de la variable
            car4N = arrAux[0].substring(0, 4);//nombre 4 primeros caracteres 
            //console.log(car4N);//ver el contenido de la variable
            codGen = (car3Ap + car3Am + car4N + "MXN");
            //console.log(codGen);//imprime el codigo
        }
        if ((arrAux.length) == 3) {//si la longitud de la palabra es igual a 3
            car3Ap = arrAux[1].substring(0, 3); //apellido paterno 3 primeros caracteres
            //console.log(car3Ap);//ver el contenido de la variable
            car3Am = arrAux[2].substring(0, 3);//apellido materno 3 primeros caracteres
            //console.log(car3Am);//ver el contenido de la variable
            car4N = arrAux[0].substring(0, 4);//nombre 4 primeros caracteres
            //console.log(car4N);//ver el contenido de la variable
            codGen = (car3Ap + car3Am + car4N + "MXN");//codigo lsito
            //console.log(codGen);//imprime el codigo
        }
        if ((arrAux.length) == 2) {//si la longitud de la palabra es igual a 2
            car3Ap = arrAux[1].substring(0, 3);//apellido paterno 3 primeros caracteres 
            //console.log(car3Ap);//ver el contenido de la variable
            car3Am = arrAux[0].substring(0, 3);//nombre 3 primeros caracteres
            //console.log(car3Am);//ver el contenido de la variable
            codGen = (car3Ap + car3Am + "????MXN");//codigo listo 
            //console.log(codGen);//imprime el codigo
        }
    }
    if ((codGen.length) == 13) {//verifica que el codigo sea de la longitud necesaria 
        return codGen //si es la longitud deseada regresa el codigo 
    } else {//si no 
        if ((arrAux.length) >= 4) {
            //tres primeras letras de la primer palabra
            car3p = arrAux[0].substring(0, 3);
            //console.log(car3p);
            //primera letras de la segunda palabra
            car1s = arrAux[1].substring(0, 1);
            //console.log(car3s);
            //primera letra de la tercer palabra
            car1t = arrAux[2].substring(0, 1);
            //console.log(car4t);
            //ultima lera de la cuarta palabra
            car1c = arrAux[3].substring(0, 1);
            //console.log(car4t);
            //codigo listo
            codGen = (car3p + car3s + car4t + car1c + "????MXN");
            //console.log(codGen);
            return codGen
        }
        if ((arrAux.length) == 3) {
            if ((arrAux[0].length) == 2) {
                car3p = arrAux[0] + "?"
            } else {
                //tres primeras letras de la primer palabra
                car3p = arrAux[0].substring(0, 3);
                //console.log(car3p);
            }
            //primera letras de la segunda palabra
            car1s = arrAux[1].substring(0, 3);
            //console.log(car3s);
            //primera letra de la tercer palabra
            car1t = arrAux[2].substring(0, 4);
            //codigo listo
            codGen = (car3p + car1s + car1t  + "MXN");
            //console.log(codGen);
            return codGen
        }
    }

}

function extraeRFC(string) { //funcion que extrae el pdf 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    for (i = 0; i < arrInfo.length; i++) { //recorrido del arreglo
        if (arrInfo[i] == "RFC:") { //cuando el indice i del arreglo seo igual a rfc
            //console.log(arrInfo[i + 1]);  //imprime el contenido del indice+1 para obtener el rfc en consola
            var div = document.getElementById('output'); //variable para despues mandar el contenido que obtuvimos
            div.innerHTML += ("<br/>" + arrInfo[i + 1] + "<br/>"); //imprime el contenido del arreglo el que se encuentra en la posicion i+1
            break //salimos del bucle
        }
    }
    return arrInfo[i + 1];
}

function extraeRaSo(string, string1) { //funcion que extrae la razon social 
    rfc = string1;
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    raSo = "";
    //console.log("estoy en la funcion extrae razon social ") //imprime el nombre de la funcion en consola 
    var guardaRaSo = []; //declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Contribuyentes"));//busqueda el indice de la palabra
    //console.log(arrInfo.indexOf("Nombre,"));//busqueda el indice de la palabra
    if (arrInfo.includes("Contribuyentes") == true) { //si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion 
        //console.log("estoy en el if y soy true") //verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Contribuyentes") + 1; i <= arrInfo.indexOf("Nombre,") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
            if (arrInfo[i] != '') {
                //console.log(arrInfo[i]); //ver en consola si el contenido es el esperado 
                //console.log(arrInfo[i].substring(0, 3)); //prueba para extraer los 3 primeros caracteres de cada palabra
                guardaRaSo.push(arrInfo[i]); //guarda en el arreglo guardaRaSo el contenido del indice del arreglo arrInfo en la posicion i 
            }
        }
    } else {
        var div = document.getElementById('output');
        div.innerHTML += ("<br/> 'EL PDF NO ES UNA CONSTANCIA FISCAL'");//valida que el pdf sea una constancia fiscal y lo imprime en la pagina web 
    }
    if ((rfc.length) == 12) {
        var div = document.getElementById('output');
        div.innerHTML += ("<br/>" + guardaRaSo.join(' ') + "<br/>");//imprime el contenido en la pagina web
        return guardaRaSo.join(' ');
    }
    if ((rfc.length) == 13) {
        if ((guardaRaSo.length) == 4) {
            var div = document.getElementById('output');
            div.innerHTML += ("<br/>" + guardaRaSo.join(' ') +"<br/>");//imprime el contenido en la pagina web
            raSo = (guardaRaSo[2] + " " + guardaRaSo[3] + " " + guardaRaSo[1] + " " + guardaRaSo[0])
            //console.log(raSo)
            return raSo
        }
        if ((guardaRaSo.length) == 3) {
            var div = document.getElementById('output');
            div.innerHTML += ("<br/>" + guardaRaSo.join(' ') + "<br/>");//imprime el contenido en la pagina web
            raSo = (guardaRaSo[1] + " " + guardaRaSo[2] + " " + guardaRaSo[0])
            //console.log(raSo)
            return  raSo
        }
        if ((guardaRaSo.length) == 2) {
            var div = document.getElementById('output');
            div.innerHTML += ("<br/>" + guardaRaSo.join(' ') + "<br/>");//imprime el contenido en la pagina web
            raSo = (guardaRaSo[1] + " " + guardaRaSo[0] )
            //console.log(raSo)
            return raSo
        }
    }
}

function extraeCodPos(string) { //funcion que extrae el codigo postal 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo  
    //console.log("estoy en la funcion extrae codigo postal ")//imprime el nombre de la funcion en consola 
    var guardaCodPos = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Postal:"));//busqueda el indice de la palabra
    //console.log(arrInfo.indexOf("Tipo"));//busqueda el indice de la palabra
    if (arrInfo.includes("Postal:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Postal:") + 1; i <= arrInfo.indexOf("Tipo") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
            guardaCodPos.push(arrInfo[i]);//guarda en el arreglo guardaCodPos el contenido del indice del arreglo arrInfo en la posicion i
        }
    }
    var div = document.getElementById('output');
    div.innerHTML += ("<br/>" + guardaCodPos.join(' ') + "<br/>"); //imprime el contenido en la pagina web
    return guardaCodPos;
}

function extraeNomVia(string) { //funcion que extrae nombre de vialidad
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae nombre vialidad")//imprime el nombre de la funcion en consola 
    var guardaNomVia = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Exterior:"));//busqueda el indice de la palabra
    if (arrInfo.includes("Exterior:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Exterior:") - 2; i >= arrInfo.indexOf("Vialidad:"); i--) { //recorrido para encontrar la informacion que necesitamos 
            if (arrInfo[i] == "Vialidad:") {//si encontramos que el idice de la posicion arrInfo[i] es igual a Vialidad: termina el recorrido 
                break
            }
            guardaNomVia.push(arrInfo[i]);//guarda en el arreglo guardaNomVia el contenido del indice del arreglo arrInfo en la posicion i
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
        }
    }
    guardaNomViaAux = (guardaNomVia.reverse());//invierte el contenido del arreglo guardaNomVia
    var div = document.getElementById('output');
    div.innerHTML += ("<br/>" + guardaNomViaAux.join(' ') + "<br/>");//imprime el contenido en la pagina web
    return guardaNomViaAux.join(' ');
}
function extraeNumExt(string) { //funcion que extrae el numero exterior
    arrInfo = Object.values(string)  //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae numero exterior")//imprime el nombre de la funcion en consola 
    var guardaNunExt = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Exterior:"));//busqueda el indice de la palabra
    //console.log(arrInfo.indexOf("Interior:"));//busqueda el indice de la palabra
    if (arrInfo.includes("Exterior:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Exterior:") + 1; i <= arrInfo.indexOf("Interior:") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
            if (arrInfo[i] == "Número") {//guarda en el arreglo guardaNumExt el contenido del indice del arreglo arrInfo en la posicion i
                break
            }
            guardaNunExt.push(arrInfo[i]);//guarda el numero exterior
        }
    }
    var div = document.getElementById('output');
    div.innerHTML += ("<br/>" + guardaNunExt.join(' ') + "<br/>");//imprime el contenido en la pagina web
    if ((guardaNunExt.length) == 2) {
        return guardaNunExt.join(' ');
    }
    else {
        return guardaNunExt;
    }
}
function extraeNumInt(string) {//funcion que extrae el numero interior
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae numero interior")//imprime el nombre de la funcion en consola 
    var guardaNunInt = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Interior:"));//busqueda el indice de la palabra
    if (arrInfo.includes("Interior:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Interior:") + 1; i <= arrInfo.indexOf("Colonia:") - 4; i++) {//recorrido de indices para obtener la informacion necesaria
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
            guardaNunInt.push(arrInfo[i]);//guarda en el arreglo guardaNumInt el contenido del indice del arreglo arrInfo en la posicion i
        }
    }
    if (guardaNunInt.length == 0) {//si la longitud del arreglo es igual a cero 
        //console.log("SN") //linea de apoyo se visualiza en consola 
        var div = document.getElementById('output');
        div.innerHTML += ("<br/> NULL <br/>");//imprime el contenido de que la constancia fiscal no tiene numero interior en la pagina web
        return 'NULL';
    } else { //si no se cumple lo anterior entonces 
        var div = document.getElementById('output');
        div.innerHTML += ("<br/>" + guardaNunInt.join(' ') + "<br/>");//imprime el contenido en la pagina web
        if ((guardaNunInt.length) >= 2) {
            return guardaNunInt.join(' ');
        }
        else {
            return guardaNunInt;
        }
    }
}
function extraeNomCol(string) {//funcion que extrae la colonia
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae numero interior")//imprime el nombre de la funcion en consola 
    var guardaNomCol = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Colonia:"));//busqueda el indice de la palabra
    if (arrInfo.includes("Colonia:") == true) {//si la palabra se encuentra en el arreglo mmartinezy el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de ammartinezpoyo 
        for (i = arrInfo.indexOf("Colonia:") + 1; i <= arrInfo.indexOf("Localidad:") - 4; i++) { //recorrido de indices para obtener la informmartinezacion necesaria 
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
            guardaNomCol.push(arrInfo[i]);//guarda en el arreglo guardammartinezNomCol el contenido del indice del arreglo arrInfo en la posicion i
        }
    }
    if (guardaNomCol.length == 0) {//si la longitud del arreglo es igual a cero 
        //console.log("SN")
        var div = document.getElementById('output');
        div.innerHTML += ("<br/> NULL <br/>");//imprime sin nombre de colonia en la pagina web 
        return 'NULL';
    } if ((guardaNomCol.join(' ')) == "OTRA NO ESPECIFICADA EN EL CATALOGO") {
        var div = document.getElementById('output');
        div.innerHTML += ("<br/> OTRA NO ESPECIFICADA EN EL CATALOGOL <br/>");//imprime sin nombre de colonia en la pagina web
        return 'NULL';
    } else {//si no se cumple lo anterior entonces
        var div = document.getElementById('output');
        div.innerHTML += ("<br/>" + guardaNomCol.join(' ') + "<br/>");//imprime el contenido del arreglo guardaNomCol en la pagina web
        return guardaNomCol.join(' ');
    }
}
function extraeDemTer(string) {//funcion que extrae la demarcacion terriotorial o el municipio 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae codigo postal ")//imprime el nombre de la funcion en consola 
    var guardaDemTer = [];//declaramos un mmartinez array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Territorial:"));//busqueda el indice de la palabra
    //console.log(arrInfo.indexOf("Federativa:"));//busqueda el indice de la palabra
    if (arrInfo.includes("Territorial:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Territorial:") + 1; i <= arrInfo.indexOf("Federativa:") - 5; i++) {
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
            guardaDemTer.push(arrInfo[i]);//guarda en el arreglo guardaReg el contenido del indice del arreglo arrInfo en la posicion i
        }
    }
    var div = document.getElementById('output');
    div.innerHTML += ("<br/>" + guardaDemTer.join(' ') + "<br/>");//imprime el contenido del arreglo guardaReg en la pagina web
    return guardaDemTer.join(' ');
}

function extraeReg(string) {//funcion que extrae el regimen 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae codigo postal ")//imprime el nombre de la funcion en consola 
    var guardaReg = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Regímenes:"));//busqueda el indice de la palabra
    //console.log(arrInfo.indexOf("Obligaciones:"));//busqueda el indice de la palabra
    if (arrInfo.includes("Regímenes:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Regímenes:") + 8; i <= arrInfo.indexOf("Obligaciones:") - 2; i++) {
            //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
            guardaReg.push(arrInfo[i]);//guarda en el arreglo guardaReg el contenido del indice del arreglo arrInfo en la posicion i
        }
    }
    var div = document.getElementById('output');
    div.innerHTML += ("<br/>" + guardaReg.join(' ') + "<br/>");//imprime el contenido del arreglo guardaReg en la pagina web
    //return guardaReg;
}
//descarga .sql
function download(filename, query) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(query));
    element.setAttribute('download', filename);
    element.style.display = 'none';
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
}

const fecha = new Date();
fechaQuery = fecha.toLocaleDateString();
//console.log(fechaQuery);

// comineza la descarga
document.getElementById("dwn-btn").addEventListener("click", function () {
    var filename = fechaQuery + "_CtbCuentas,AcProveedores_" + guardaRFC + ".sql";
    download(filename, query);
    location.reload();
}, false);

function extraeRFCAux(string) { //funcion que extrae el pdf 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    for (i = 0; i < arrInfo.length; i++) { //recorrido del arreglo
        if (arrInfo[i] == "RFC:") { //cuando el indice i del arreglo seo igual a rfc
            //console.log(arrInfo[i + 1]);  //imprime el mmartinez contenido del indice+1 para obtener el rfc en consola
            break //salimos del bucle
        }
    }
    return arrInfo[i + 1];
}
function extraeRaSoAux(string) { //funcion que extrae la razon social 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
    //console.log("estoy en la funcion extrae razon social ") //imprime el nombre de la funcion en consola 
    var guardaRaSo = []; //declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    //console.log(arrInfo.indexOf("Contribuyentes"));//busqueda el indice de la palabra
    //console.log(arrInfo.indexOf("Nombre,"));//busqueda el mapm indice de la palabra
    if (arrInfo.includes("Contribuyentes") == true) { //si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion 
        //console.log("estoy en el if y soy true") //verificar que si se cumplio la condicion linea de apoyo 
        for (i = arrInfo.indexOf("Contribuyentes") + 1; i <= arrInfo.indexOf("Nombre,") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
            //console.log(arrInfo[i]); //ver en consola si el contenido es el esperado 
            guardaRaSo.push(arrInfo[i]); //guarda en el arreglo guardaRaSo el contenido del indice del arreglo arrInfo en la posicion i 
        }
    }
    return guardaRaSo.join(' ');
}


function guardar() {
    var banco = document.getElementById("banco1").value;//guarda banco 
    //console.log(banco);
    guardaBanco = banco;//pasa nombre del banco
    var clabe = document.getElementById("clabe").value;//guarda clabe
    //console.log(clabe);
    guardaClabe = clabe;
    var ctaBancaria = document.getElementById("ctaBancaria").value;//guarda cuenta bancaria 
    //console.log(ctaBancaria);
    guardaCtaBancaria = ctaBancaria;

    if ((clabe.length) < 18) {//Verificacion de la clabe
        alert("La longitud de la CLABE no puede tener menos de 18 digitos");
        document.getElementById("clabe").focus();
    } if ((clabe.length) > 18) {//verificacion de la clabe 
        alert("La longitud de la CLABE tiene que ser igual a 18 digitos");
        document.getElementById("clabe").focus();
    }if (banco == "") {//verifica que el campo banco no este vacio
        alert("Se requiere nombre del banco");
        document.getElementById("banco1").focus();
    } if (clabe == "") { //verifica que el campo clabe no este vacio
        alert("Se requiere CLABE bancaria");
        document.getElementById("clabe").focus();
    } if (ctaBancaria == "") {//verifica que el campo cuenta bancaria no este vacio
        alert("Se requiere cuenta bancaria");
        document.getElementById("ctaBancaria").focus();
    } if ((clabe.length) == 18 && banco != "" && clabe != "") {
        document.getElementById("banco1").value = "";
        document.getElementById("clabe").value = "";
        document.getElementById("ctaBancaria").value = "";
        var div = document.getElementById('outputDataBanc'); //variable para despues mandar el contenido que obtuvimos
        div.innerHTML += ("<br/> Datos Bancarios Guardados <br/>"); //imprime el contenido del arreglo el que se encuentra en la posicion i+1
    }
}

function bancoSat(string) {//este es la Clave que da el SAT
    nomBanco = string;
    if (nomBanco == 'BANAMEX') { return '002' }
    if (nomBanco == 'BANCOMEXT') { return '006' }
    if (nomBanco == 'BANOBRAS') { return '009' }
    if (nomBanco == 'BBVA BANCOMER') { return '012' }
    if (nomBanco == 'SANTANDER') { return '014' }
    if (nomBanco == 'BANJERCITO') { return '019' }
    if (nomBanco == 'HSBC') { return '021' }
    if (nomBanco == 'BAJIO') { return '030' }
    if (nomBanco == 'IXE') { return '032' }
    if (nomBanco == 'INBURSA') { return '036' }
    if (nomBanco == 'INTERACCIONES') { return '037' }
    if (nomBanco == 'MIFEL') { return '042' }
    if (nomBanco == 'SCOTIABANK') { return '044' }
    if (nomBanco == 'BANREGIO') { return '058' }
    if (nomBanco == 'INVEX') { return '059' }
    if (nomBanco == 'BANSI') { return '060' }
    if (nomBanco == 'AFIRME') { return '062' }
    if (nomBanco == 'BANORTE') { return '072' }
    if (nomBanco == 'THE ROYAL BANK') { return '102' }
    if (nomBanco == 'AMERICAN EXPRESS') { return '103' }
    if (nomBanco == 'BAMSA') { return '106' }
    if (nomBanco == 'TOKYO') { return '108' }
    if (nomBanco == 'JP MORGAN') { return '110' }
    if (nomBanco == 'BMONEX') { return '112' }
    if (nomBanco == 'VE POR MAS') { return '113' }
    if (nomBanco == 'ING') { return '116' }
    if (nomBanco == 'DEUTSCHE') { return '124' }
    if (nomBanco == 'CREDIT SUISSE') { return '126' }
    if (nomBanco == 'AZTECA') { return '127' }
    if (nomBanco == 'AUTOFIN') { return '128' }
    if (nomBanco == 'BARCLAYS') { return '129' }
    if (nomBanco == 'COMPARTAMOS') { return '130' }
    if (nomBanco == 'BANCO FAMSA') { return '131' }
    if (nomBanco == 'BMULTIVA') { return '132' }
    if (nomBanco == 'ACTINVER') { return '133' }
    if (nomBanco == 'WAL-MART') { return '134' }
    if (nomBanco == 'NAFIN') { return '135' }
    if (nomBanco == 'INTERBANCO') { return '136' }
    if (nomBanco == 'BANCOPPEL') { return '137' }
    if (nomBanco == 'ABC CAPITAL') { return '138' }
    if (nomBanco == 'UBS BANK') { return '139' }
    if (nomBanco == 'CONSUBANCO') { return '140' }
    if (nomBanco == 'VOLKSWAGEN') { return '141' }
    if (nomBanco == 'CIBANCO') { return '143' }
    if (nomBanco == 'BBASE') { return '145' }
    if (nomBanco == 'BANSEFI') { return '166' }
    if (nomBanco == 'HIPOTECARIA') { return '168' }
    if (nomBanco == 'MONEXCB') { return '600' }
    if (nomBanco == 'GBM') { return '601' }
    if (nomBanco == 'MASARI') { return '602' }
    if (nomBanco == 'VALUE') { return '605' }
    if (nomBanco == 'ESTRUCTURADORES') { return '606' }
    if (nomBanco == 'TIBER') { return '607' }
    if (nomBanco == 'VECTOR') { return '608' }
    if (nomBanco == 'B&B') { return '610' }
    if (nomBanco == 'ACCIVAL') { return '614' }
    if (nomBanco == 'MERRILL LYNCH') { return '615' }
    if (nomBanco == 'FINAMEX') { return '616' }
    if (nomBanco == 'VALMEX') { return '617' }
    if (nomBanco == 'UNICA') { return '618' }
    if (nomBanco == 'MAPFRE') { return '619' }
    if (nomBanco == 'PROFUTURO') { return '620' }
    if (nomBanco == 'CB ACTINVER') { return '621' }
    if (nomBanco == 'OACTIN') { return '622' }
    if (nomBanco == 'SKANDIA') { return '623' }
    if (nomBanco == 'CBDEUTSCHE') { return '626' }
    if (nomBanco == 'ZURICH') { return '627' }
    if (nomBanco == 'ZURICHVI') { return '628' }
    if (nomBanco == 'SU CASITA') { return '629' }
    if (nomBanco == 'CB INTERCAM') { return '630' }
    if (nomBanco == 'CI BOLSA') { return '631' }
    if (nomBanco == 'BULLTICK CB') { return '632' }
    if (nomBanco == 'STERLING') { return '633' }
    if (nomBanco == 'FINCOMUN') { return '634' }
    if (nomBanco == 'HDI SEGUROS') { return '636' }
    if (nomBanco == 'ORDER') { return '637' }
    if (nomBanco == 'AKALA') { return '638' }
    if (nomBanco == 'CB JPMORGAN') { return '640' }
    if (nomBanco == 'REFORMA') { return '642' }
    if (nomBanco == 'STP') { return '646' }
    if (nomBanco == 'TELECOMM') { return '647' }
    if (nomBanco == 'EVERCORE') { return '648' }
    if (nomBanco == 'SKANDIA') { return '649' }
    if (nomBanco == 'SEGMTY') { return '651' }
    if (nomBanco == 'ASEA') { return '652' }
    if (nomBanco == 'KUSPIT') { return '653' }
    if (nomBanco == 'SOFIEXPRESS') { return '655' }
    if (nomBanco == 'UNAGRA') { return '656' }
    if (nomBanco == 'OPCIONES EMPRESARIALES') { return '659' }
    if (nomBanco == 'CLS') { return '901' }
    if (nomBanco == 'INDEVAL') { return '902' }
    if (nomBanco == 'LIBERTAD') { return '670' }
    if (nomBanco == 'N/A') { return '999' }
    if (nomBanco == 'NULL') { return '' }
    if (nomBanco == '') { return '' }
}
function idBancoSat(string) {//este es nuestro id de la base de datos
    nomIdBancoSat = string;
    //console.log(nomIdBancoSat);
    if (nomIdBancoSat == 'BANAMEX') { return '1' }
    if (nomIdBancoSat == 'BANCOMEXT') { return '2' }
    if (nomIdBancoSat == 'BANOBRAS') { return '3' }
    if (nomIdBancoSat == 'BBVA BANCOMER') { return '4' }
    if (nomIdBancoSat == 'SANTANDER') { return '5' }
    if (nomIdBancoSat == 'BANJERCITO') { return '6' }
    if (nomIdBancoSat == 'HSBC') { return '7' }
    if (nomIdBancoSat == 'BAJIO') { return '8' }
    if (nomIdBancoSat == 'IXE') { return '9' }
    if (nomIdBancoSat == 'INBURSA') { return '10' }
    if (nomIdBancoSat == 'INTERACCIONES') { return '11' }
    if (nomIdBancoSat == 'MIFEL') { return '12' }
    if (nomIdBancoSat == 'SCOTIABANK') { return '13' }
    if (nomIdBancoSat == 'BANREGIO') { return '14' }
    if (nomIdBancoSat == 'INVEX') { return '15' }
    if (nomIdBancoSat == 'BANSI') { return '16' }
    if (nomIdBancoSat == 'AFIRME') { return '17' }
    if (nomIdBancoSat == 'BANORTE') { return '18' }
    if (nomIdBancoSat == 'THE ROYAL BANK') { return '19' }
    if (nomIdBancoSat == 'AMERICAN EXPRESS') { return '20' }
    if (nomIdBancoSat == 'BAMSA') { return '21' }
    if (nomIdBancoSat == 'TOKYO') { return '22' }
    if (nomIdBancoSat == 'JP MORGAN') { return '23' }
    if (nomIdBancoSat == 'BMONEX') { return '24' }
    if (nomIdBancoSat == 'VE POR MAS') { return '25' }
    if (nomIdBancoSat == 'ING') { return '26' }
    if (nomIdBancoSat == 'DEUTSCHE') { return '27' }
    if (nomIdBancoSat == 'CREDIT SUISSE') { return '28' }
    if (nomIdBancoSat == 'AZTECA') { return '29' }
    if (nomIdBancoSat == 'AUTOFIN') { return '30' }
    if (nomIdBancoSat == 'BARCLAYS') { return '31' }
    if (nomIdBancoSat == 'COMPARTAMOS') { return '32' }
    if (nomIdBancoSat == 'BANCO FAMSA') { return '33' }
    if (nomIdBancoSat == 'BMULTIVA') { return '34' }
    if (nomIdBancoSat == 'ACTINVER') { return '35' }
    if (nomIdBancoSat == 'WAL-MART') { return '36' }
    if (nomIdBancoSat == 'NAFIN') { return '37' }
    if (nomIdBancoSat == 'INTERBANCO') { return '38' }
    if (nomIdBancoSat == 'BANCOPPEL') { return '39' }
    if (nomIdBancoSat == 'ABC CAPITAL') { return '40' }
    if (nomIdBancoSat == 'UBS BANK') { return '41' }
    if (nomIdBancoSat == 'CONSUBANCO') { return '42' }
    if (nomIdBancoSat == 'VOLKSWAGEN') { return '43' }
    if (nomIdBancoSat == 'CIBANCO') { return '44' }
    if (nomIdBancoSat == 'BANSEFI') { return '45' }
    if (nomIdBancoSat == 'HIPOTECARIA FEDERAL') { return '46' }
    if (nomIdBancoSat == 'MONEXCB') { return '47' }
    if (nomIdBancoSat == 'GBM') { return '48' }
    if (nomIdBancoSat == 'MASARI') { return '49' }
    if (nomIdBancoSat == 'VALUE') { return '50' }
    if (nomIdBancoSat == 'ESTRUCTURADORES') { return '51' }
    if (nomIdBancoSat == 'TIBER') { return '52' }
    if (nomIdBancoSat == 'VECTOR') { return '53' }
    if (nomIdBancoSat == 'B&B') { return '54' }
    if (nomIdBancoSat == 'ACCIVAL') { return '55' }
    if (nomIdBancoSat == 'MERRILL LYNCH') { return '56' }
    if (nomIdBancoSat == 'FINAMEX') { return '57' }
    if (nomIdBancoSat == 'VALMEX') { return '58' }
    if (nomIdBancoSat == 'UNICA') { return '59' }
    if (nomIdBancoSat == 'MAPFRE') { return '60' }
    if (nomIdBancoSat == 'PROFUTURO') { return '61' }
    if (nomIdBancoSat == 'CB ACTINVER') { return '62' }
    if (nomIdBancoSat == 'OACTIN') { return '63' }
    if (nomIdBancoSat == 'SKANDIA') { return '64' }
    if (nomIdBancoSat == 'CBDEUTSCHE') { return '65' }
    if (nomIdBancoSat == 'ZURICH') { return '66' }
    if (nomIdBancoSat == 'ZURICHVI') { return '67' }
    if (nomIdBancoSat == 'SU CASITA') { return '68' }
    if (nomIdBancoSat == 'CB INTERCAM') { return '69' }
    if (nomIdBancoSat == 'CI BOLSA') { return '70' }
    if (nomIdBancoSat == 'BULLTICK CB') { return '71' }
    if (nomIdBancoSat == 'STERLING') { return '72' }
    if (nomIdBancoSat == 'FINCOMUN') { return '73' }
    if (nomIdBancoSat == 'HDI SEGUROS') { return '74' }
    if (nomIdBancoSat == 'ORDER') { return '75' }
    if (nomIdBancoSat == 'AKALA') { return '76' }
    if (nomIdBancoSat == 'CB JPMORGAN') { return '77' }
    if (nomIdBancoSat == 'REFORMA') { return '78' }
    if (nomIdBancoSat == 'CB BANORTE') { return '79' }
    if (nomIdBancoSat == 'STP') { return '80' }
    if (nomIdBancoSat == 'TELECOMM') { return '81' }
    if (nomIdBancoSat == 'EVERCORE') { return '82' }
    if (nomIdBancoSat == 'SKANDIA') { return '83' }
    if (nomIdBancoSat == 'SEGMTY') { return '84' }
    if (nomIdBancoSat == 'ASEA') { return '85' }
    if (nomIdBancoSat == 'SOFIEXPRESS') { return '86' }
    if (nomIdBancoSat == 'CLS') { return '87' }
    if (nomIdBancoSat == 'INDEVAL') { return '88' }
    if (nomIdBancoSat == 'BBASE') { return '264' }
    if (nomIdBancoSat == 'KUSPIT') { return '265' }
    if (nomIdBancoSat == 'UNAGRA') { return '266' }
    if (nomIdBancoSat == 'OPCIONES EMPRESARIALES DEL NOROESTE') { return '267' }
    if (nomIdBancoSat == 'LIBERTAD') { return '268' }
    if (nomIdBancoSat == 'N/A') { return '269' }
    if (nomIdBancoSat == 'SABADELL') { return '2130' }
    if (nomIdBancoSat == 'NULL') { return 'NULL' }
    if (nomIdBancoSat == '') { return ''}
}

function personaMoral(string) {
    rfc = string;
    pm = "";
    if ((rfc.length) == 12) {//si es persona moral
        pm = '1';
    } if ((rfc.length) == 13) {//si es persona fisica
        pm = '0';
    }
    //console.log(pm); 
    return pm
}

function personaFisNom(string,stringRfc) {
    if ((stringRfc.length) == 13) {//si es persona fisica
        arrInfo = Object.values(string); //convertimos el contenido de la extracion en un arreglo
        //console.log("persona fisica nombre"); //imprime el nombre de la funcion en consola
        //console.log(string);
        var guardaNom = []; //declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
        //console.log(arrInfo.indexOf("(s):"));//busqueda el indice de la palabra
        //console.log(arrInfo.indexOf("Primer"));//busqueda el indice de la palabra
        if (arrInfo.includes("(s):") == true) { //si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
            //console.log("estoy en el if y soy true") //verificar que si se cumplio la condicion linea de apoyo 
            for (i = arrInfo.indexOf("(s):") + 1; i <= arrInfo.indexOf("Primer") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
                if (arrInfo[i] != '') {
                   // console.log(arrInfo[i]); //ver en consola si el contenido es el esperado 
                    guardaNom.push(arrInfo[i]); //guarda en el arreglo guardaRaSo el contenido del indice del arreglo arrInfo en la posicion i
                }
            }
        }
    } else {
        return 'NULL'
    }
    //console.log(guardaNom.join(' '));
    return guardaNom.join(' ');
}

function personaFisApPa(string, stringRfc) {
    if ((stringRfc.length) == 13) {//si es persona fisica
        arrInfo = Object.values(string); //convertimos el contenido de la extracion en un arreglo
        //console.log("persona fisica nombre"); //imprime el nombre de la funcion en consola
        //console.log(string);
        var guardaApPa = []; //declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
        //console.log(arrInfo.indexOf("Apellido:"));//busqueda el indice de la palabra
        //console.log(arrInfo.indexOf("Segundo"));//busqueda el indice de la palabra
        if (arrInfo.includes("Apellido:") == true) { //si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
            //console.log("estoy en el if y soy true") //verificar que si se cumplio la condicion linea de apoyo 
            for (i = arrInfo.indexOf("Apellido:") + 1; i <= arrInfo.indexOf("Segundo") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
                if (arrInfo[i] != '') {
                    //console.log(arrInfo[i]); //ver en consola si el contenido es el esperado 
                    guardaApPa.push(arrInfo[i]); //guarda en el arreglo guardaRaSo el contenido del indice del arreglo arrInfo en la posicion i
                }
            }
        } 
    } else {
        return 'NULL'
    }
    //console.log(guardaApPa.join(' '));
    return guardaApPa.join(' ');
}

function personaFisApMa(string, stringRfc) {
    if ((stringRfc.length) == 13) {//si es persona fisica
        arrInfo = Object.values(string); //convertimos el contenido de la extracion en un arreglo
        //console.log("persona fisica nombre"); //imprime el nombre de la funcion en consola
        //console.log(string);
        var guardaApMa = []; //declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
        //console.log(arrInfo.indexOf("Segundo"));//busqueda el indice de la palabra
        //console.log(arrInfo.indexOf("inicio"));//busqueda el indice de la palabra
        if ((arrInfo.length) != 0) {
            if (arrInfo.includes("Segundo") == true) { //si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
                //console.log("estoy en el if y soy true") //verificar mmartinez que si se cumplio la condicion linea de apoyo 
                for (i = arrInfo.indexOf("Segundo") + 2; i <= arrInfo.indexOf("inicio") - 2; i++) {//recorrido de indices para obtener la informacion necesaria
                    if (arrInfo[i] != '') {
                        //console.log(arrInfo[i]); //ver en consola si el contenido es el esperado 
                        guardaApMa.push(arrInfo[i]); //guarda en el arreglo guardaRaSo el contenido del indice del arreglo arrInfo en la posicion i
                    }
                }
            }
        } else {
            return 'NULL'
        }
        //console.log(guardaApMa.join(' '));
        return guardaApMa.join(' ');
    }
    return 'NULL'
}

function extraeCodPosAux(string) { //funcion que extrae el codigo postal 
    arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo  
    var guardaCodPosAux = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
    if (arrInfo.includes("Postal:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
        for (i = arrInfo.indexOf("Postal:") + 1; i <= arrInfo.indexOf("Tipo") - 1; i++) {//recorrido de indices para obtener la informacion necesaria
            guardaCodPosAux.push(arrInfo[i]);//guarda en el arreglo guardaCodPos el contenido del indice del arreglo arrInfo en la posicion i
        }
    }
    return guardaCodPosAux;
}

function idCiudad(string) {
    //console.log(string);
    codPos = parseInt(string, 10);
    //console.log(codPos);//ver variable como numero 
    if (codPos >= 1000 && codPos <= 16900) { /*console.log("cdmx");*/ return '72' } //cdmx  
    if (codPos >= 31000 && codPos <= 33997) { /*console.log("chihuahua");*/ return '7' } //chihuahua
    if (codPos >= 20000 && codPos <= 20997) { /*console.log("aguascalientes");*/ return '2' } //aguascalientes 
    if (codPos >= 97000 && codPos <= 97990) { /*console.log("yucatan");*/ return '67' } //yucatan 
    if (codPos >= 21000 && codPos <= 20997) { /*console.log("baja california");*/ return '66' } //baja california 
    if (codPos >= 23000 && codPos <= 23997) { /*console.log("baja california sur");*/ return '4' } //baja california sur
    if (codPos >= 24000 && codPos <= 24940) { /*console.log("campeche");*/ return '' } //campeche ***********
    if (codPos >= 25000 && codPos <= 27997) { /*console.log("coahulia");*/ return '' } //coahulia ***********
    if (codPos >= 28000 && codPos <= 28989) { /*console.log("colima");*/ return '' } //colima ***********
    if (codPos >= 29000 && codPos <= 30997) { /*console.log("chiapas");*/ return '10' } //chiapas 
    if (codPos >= 34000 && codPos <= 35987) { /*console.log("durango");*/ return '' } //durango ***********
    if (codPos >= 39000 && codPos <= 41998) { /*console.log("guerrero");*/ return '1' } //guerrero 
    if (codPos >= 36000 && codPos <= 38997) { /*console.log("guanajuato");*/ return '9' } //guanajuato 
    if (codPos >= 42000 && codPos <= 43998) { /*console.log("hidalgo");*/ return '38' } //hidalgo 
    if (codPos >= 44100 && codPos <= 49996) { /*console.log("jalisco");*/ return '19' } //jalisco 
    if (codPos >= 50000 && codPos <= 57950) { /*console.log("edo mex o mex");*/ return '16' } //edo mex o mex 
    if (codPos >= 58000 && codPos <= 61998) { /*console.log("michoacan");*/ return '' } //michoacan ***********
    if (codPos >= 62000 && codPos <= 62996) { /*console.log("morelos");*/ return '14' } //morelos 
    if (codPos >= 63000 && codPos <= 63996) { /*console.log("nayarit");*/ return '12' } //nayarit 
    if (codPos >= 64000 && codPos <= 67996) { /*console.log("nuevo leon");*/ return '25' } //nuevo leon 
    if (codPos >= 68000 && codPos <= 71998) { /*console.log("oaxaca");*/ return '71' } //oaxaca 
    if (codPos >= 72000 && codPos <= 75997) { /*console.log("puebla");*/ return '28' } //puebla 
    if (codPos >= 77000 && codPos <= 77997) { /*console.log("quinta roo");*/ return '5' } //quinta roo 
    if (codPos >= 76000 && codPos <= 76998) { /*console.log("queretaro");*/ return '29' } //queretaro 
    if (codPos >= 80000 && codPos <= 82996) { /*console.log("sinaloa");*/ return '65' }  //sinaloa 
    if (codPos >= 78000 && codPos <= 79998) { /*console.log("san luis potosi");*/ return '32' } //san luis potosi  
    if (codPos >= 98000 && codPos <= 99998) { /*console.log("zacatecas");*/ return '' } //zacatecas ***********
    if (codPos >= 91000 && codPos <= 96998) { /*console.log("veracruz");*/ return '3' } //veracruz 
    if (codPos >= 90000 && codPos <= 90990) { /*console.log("tlaxcala");*/ return '41' } //tlaxcala 
    if (codPos >= 87000 && codPos <= 89970) { /*console.log("tamaulipas");*/ return '8' } //tamaulipas 
    if (codPos >= 86000 && codPos <= 86998) { /*console.log("tabasco");*/ return '' } //tabasco ***********
    if (codPos >= 83000 && codPos <= 85994) { /*console.log("sonora")*/; return '74' } //sonora 
    else { return 'NULL'}
}

function guardarCtc() {//guarda los datos introducidos en los inputs y verifica que no esten vacios
    var ctaConta1 = document.getElementById("ctaConta1").value;//guarda banco
    //console.log(ctaConta1);
    guardaCtaConta1 = ctaConta1;//pasa nombre del banco
    var ctaConta2 = document.getElementById("ctaConta2").value;//guarda banco
    //console.log(ctaConta2);
    guardaCtaConta2 = ctaConta2;//pasa nombre del banco
    var ctaAnt1 = document.getElementById("ctaAnt1").value;//guarda clabe
    //console.log(ctaAnt1);
    guardaCtaAnt1 = ctaAnt1;
    var ctaAnt2 = document.getElementById("ctaAnt2").value;//guarda clabe
    //console.log(ctaAnt2);
    guardaCtaAnt2 = ctaAnt2;

    if (ctaConta1 =="") {//Verificacion de la clabe
        alert("Se requiere IdCuenta Contable");
        document.getElementById("ctaConta1").focus();
    } if (ctaConta2 =="") {//verificacion de la clabe
        alert("Se requiere cuenta");
        document.getElementById("ctaConta2").focus();
    } if (ctaAnt1 == "") {//verifica que el campo banco no este vacio
        alert("Se requiere IdCuenta");
        document.getElementById("ctaAnt1").focus();
    } if (ctaAnt2 == "") { //verifica que el campo clabe no este vacio
        alert("Se requiere cuenta");
        document.getElementById("ctaAnt2").focus();
    } if ((ctaConta1 + 1) == ctaAnt1) {//verifica numero consecutivos en ctaConta1 y ctaAnt1
        document.getElementById("ctaConta1").value = "";
        document.getElementById("ctaConta2").value = "";
        document.getElementById("ctaAnt1").value = "";
        document.getElementById("ctaAnt2").value = "";
        alert("Datos contables guardados");
    } if ((ctaAnt1 - 1) == ctaConta1) {//verifica numero consecutivos en ctaConta1 y ctaAnt1
        document.getElementById("ctaConta1").value = "";
        document.getElementById("ctaConta2").value = "";
        document.getElementById("ctaAnt1").value = "";
        document.getElementById("ctaAnt2").value = "";
        var div = document.getElementById('outputCuentas'); //variable para despues mandar el contenido que obtuvimos
        div.innerHTML += ("<br/> Cuentas Guardadas <br/>"); //imprime el contenido del arreglo el que se encuentra en la posicion i+1
    } else {
        alert("Los IdCuenta tiene que ser consecutivos")
    }
}

function guardaridProveedor() {
    var idproveedor = document.getElementById("proveedor").value;
    //console.log(idproveedor);
    if (idproveedor == "") {//Verificacion de la clabe
        alert("Se requiere IdProveedor");
        document.getElementById("proveedor").focus();
    } else {
        document.getElementById("proveedor").value = "";
        guardaIdProveedor = idproveedor;
        var div = document.getElementById('outputProv'); //variable para despues mandar el contenido que obtuvimos
        div.innerHTML += ("<br/> IdGuardado <br/>"); //imprime el contenido del arreglo el que se encuentra en la posicion i+1
    }
}

function regimenCapDescripcion(string, rfc) {//pasa el regimen capital para la descripcion de las cuentas 
    var regCapital = "";
    if ((rfc.length) == 12) {
        arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
        //console.log("estoy en la funcion  regimen Capital")//imprime el nombre de la funcion en consola 
        var guardaRegCap = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
        //console.log(arrInfo.indexOf("Capital:"));//busqueda el indice de la pmmartinezalabra
        //console.log(arrInfo.indexOf("Comercial:"));//busqueda el indice de la palabra
        if (arrInfo.includes("Capital:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
            //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
            for (i = arrInfo.indexOf("Capital:") + 1; i <= arrInfo.indexOf("Comercial:") - 2; i++) {
                //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
                guardaRegCap.push(arrInfo[i]);//guarda en el arreglo guardaReg el contenido del indice del arreglo arrInfo en la posicion i
            }
        }

        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA DE CAPITAL VARIABLE') {
            regCapital = 'SA de CV';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD DE RESPONSABILIDAD LIMITADA DE CAPITAL VARIABLE') {
            regCapital = 'S de RL de CV';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD CIVIL') {
            regCapital = 'SC';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'ASOCIACION CIVIL') {
            regCapital = 'AC';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA PROMOTORA DE INVERSION DE CAPITAL VARIABLE') {
            regCapital = 'SAPI de CV';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA PROMOTORA DE INVERSION') {
            regCapital = 'SAPI';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA') {
            regCapital = 'SA';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD POR ACCIONES SIMPLIFICADA') {
            regCapital = 'SAS';
            //console.log(regCapital)
        }
    }
    //console.log(regCapital);
    return regCapital;
}

function regimenCapitalRaSo(string, rfc) {//pasa el regimen capital para la razon social de proveedores 
    var regCapital = "";
    if ((rfc.length) == 12) {
        arrInfo = Object.values(string) //convertimos el contenido de la extracion en un arreglo 
        //console.log("estoy en la funcion  regimen Capital")//imprime el nombre de la funcion en consola 
        var guardaRegCap = [];//declaramos un array vacio para llenarlo con la informacion necesaria del campo a buscar 
        //console.log(arrInfo.indexOf("Capital:"));//busqueda el indice de la palabra
        //console.log(arrInfo.indexOf("Comercial:"));//busqueda el indice de la palabra
        if (arrInfo.includes("Capital:") == true) {//si la palabra se encuentra en el arreglo y el valor de este es verdadero entonces realiza la condicion
            //console.log("estoy en el if y soy true")//verificar que si se cumplio la condicion linea de apoyo 
            for (i = arrInfo.indexOf("Capital:") + 1; i <= arrInfo.indexOf("Comercial:") - 2; i++) {
                //console.log(arrInfo[i]);//ver en consola si el contenido es el esperado
                guardaRegCap.push(arrInfo[i]);//guarda en el arreglo guardaReg el contenido del indice del arreglo arrInfo en la posicion i
            }
        }

        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA DE CAPITAL VARIABLE') {
            regCapital = 'SA DE CV';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD DE RESPONSABILIDAD LIMITADA DE CAPITAL VARIABLE') {
            regCapital = 'S DE RL DE CV';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD CIVIL') {
            regCapital = 'SC';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'ASOCIACION CIVIL') {
            regCapital = 'AC';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA PROMOTORA DE INVERSION DE CAPITAL VARIABLE') {
            regCapital = 'SAPI DE CV';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA PROMOTORA DE INVERSION') {
            regCapital = 'SAPI';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD ANONIMA') {
            regCapital = 'SA';
            //console.log(regCapital)
        }
        if ((guardaRegCap.join(' ')) == 'SOCIEDAD POR ACCIONES SIMPLIFICADA') {
            regCapital = 'SAS';
            //console.log(regCapital)
        }
    }
    //console.log(regCapital);
    return regCapital;
}

function descripcionTipOracion(gaurdaPersonaFisApPa, gaurdaPersonaFisApMa, guardaPersonaFisNom, guardaRaSo, string, guardaRegimenCapitalDes) {//para la descripcion de cuentas es en tipo Oracion el texto
    rfc = string;
    var guardatipOracion = "";
    //console.log(guardaRegimenCapitalDes);
    if ((rfc.length) == 13) {//si es persona fisica
        //console.log("persona fisica");
        var oracion = (gaurdaPersonaFisApPa+" " + gaurdaPersonaFisApMa+" " + guardaPersonaFisNom).toLowerCase();//los contcatena y los vuelve minusculas todas las letras
        //console.log(oracion);
        let tipOracion = oracion.split(" ").map(tipOracion => {
            return tipOracion[0].toUpperCase() + tipOracion.slice(1)//hace la primer letra de cada palabra mayuscula 
        })
        //console.log(tipOracion)
        guardatipOracion = tipOracion.join(' ');//concatena el resultado dejando un espacio en blanco y guarda el resultado 
        
    } if ((rfc.length) == 12) {//si es persona moral
        //console.log("persona moral")
        var oracion = (guardaRaSo).toLowerCase();//los contcatena y los vuelve minusculas todas las letras
        //console.log(oracion);
        let tipOracion = oracion.split(" ").map(tipOracion => {
            return tipOracion[0].toUpperCase() + tipOracion.slice(1)// hace la primer letra de cada palabra mayuscula
        })
        //console.log(tipOracion)
        guardatipOracion = tipOracion.join(' ') + " " + guardaRegimenCapitalDes;//concatena el resultado dejando un espacio en blanco y guarda el resultado
    }
    //console.log(guardatipOracion);
    return guardatipOracion;//regresar el valor del resultado
}

function querysCtas(string, guardaTipoOracion,/* guardaCtaConta1, guardaCtaConta2, guardaCtaAnt1, guardaCtaAnt2*/) { 
    //console.log(guardaTipoOracion);
    rfc = string; //Esta funcion determina si es persona moral o persona fisica y en base a eso genera el query para persona fisica y moral 
    queryCtasContAnt = "";
    if ((rfc.length) == 12) {//si es persona moral se pasa la razon social en cadena como mayusculas y minusculas para el campo descripcion  
        queryCtas = "set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas on \n insert into CtbCuentas(idCuenta,Cuenta,Descripcion,idTipoCuenta,Acepta_Mov,EsProveedor,EsCliente,ToparChequeVsSaldo,EmisionCheque,idCuentaComplementaria,EsDolares,idTipoMoneda,PermitirDeposito,EsDeudor,SaldoLimiteDeudor,EsAcreedor,EsCuentaIVA,IdConceptoDIOT,PermitirProgramarPago,IdAgaCatIVA,IdCtaCostoTAC,IdAgrupadorSAT,Agrupador) \n values(@idctas+1,'2130101'+@numcta,'" + guardaTipoOracion + "',4,1,0,0,1,0,NULL,0,6,0,0,0,0,0,NULL,0,NULL,NULL,NULL,'NULL') \n set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas off \n
        //console.log(queryCtas);
        queryAnt = "\n set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas on \n insert into CtbCuentas(idCuenta,Cuenta,Descripcion,idTipoCuenta,Acepta_Mov,EsProveedor,EsCliente,ToparChequeVsSaldo,EmisionCheque,idCuentaComplementaria,EsDolares,idTipoMoneda,PermitirDeposito,EsDeudor,SaldoLimiteDeudor,EsAcreedor,EsCuentaIVA,IdConceptoDIOT,PermitirProgramarPago,IdAgaCatIVA,IdCtaCostoTAC,IdAgrupadorSAT,Agrupador) \n values(@idctas+2,'1180101'+@numcta,'" + guardaTipoOracion + "',1,1,1,0,0,1,NULL,0,6,0,0,0,0,0,NULL,0,NULL,NULL,NULL,'NULL') \n set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas off \n"
        //console.log(queryAnt);
        queryCtasContAnt = queryCtas + queryAnt;
    } if ((rfc.length) == 13) {//si es persona fisica pasa los apellidos luego nombres en mayusculas y minusculas 
        queryCtas = "set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas on \n insert into CtbCuentas(idCuenta,Cuenta,Descripcion,idTipoCuenta,Acepta_Mov,EsProveedor,EsCliente,ToparChequeVsSaldo,EmisionCheque,idCuentaComplementaria,EsDolares,idTipoMoneda,PermitirDeposito,EsDeudor,SaldoLimiteDeudor,EsAcreedor,EsCuentaIVA,IdConceptoDIOT,PermitirProgramarPago,IdAgaCatIVA,IdCtaCostoTAC,IdAgrupadorSAT,Agrupador) \n values( @idctas+1,'2130101'+@numcta,'" + guardaTipoOracion + "',4,1,0,0,1,0,NULL,0,6,0,0,0,0,0,NULL,0,NULL,NULL,NULL,'NULL') \n set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas off \n
        //console.log(queryCtas);
        queryAnt = "\n set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas on \n insert into CtbCuentas(idCuenta,Cuenta,Descripcion,idTipoCuenta,Acepta_Mov,EsProveedor,EsCliente,ToparChequeVsSaldo,EmisionCheque,idCuentaComplementaria,EsDolares,idTipoMoneda,PermitirDeposito,EsDeudor,SaldoLimiteDeudor,EsAcreedor,EsCuentaIVA,IdConceptoDIOT,PermitirProgramarPago,IdAgaCatIVA,IdCtaCostoTAC,IdAgrupadorSAT,Agrupador) \n values( @idctas+2,'1180101'+@numcta,'" + guardaTipoOracion + "',1,1,1,0,0,1,NULL,0,6,0,0,0,0,0,NULL,0,NULL,NULL,NULL,'NULL') \n set identity_insert InmobiliariaCaboBallena.dbo.CtbCuentas off \n"
        //console.log(queryAnt);
        queryCtasContAnt = queryCtas + queryAnt;
    }
    //console.log(queryCtasContAnt);
    return queryCtasContAnt
}


var checkbox = document.getElementById('dataBanco'); 
checkbox.addEventListener('change', function () {//checa que el check este seleccionado en casi de que asi sea 
    if (this.checked) {
        //console.log('checkbox esta seleccionado');
        var banco = 'NULL'//guarda banco como null 
        //console.log(banco);
        guardaBanco = banco;//pasa nombre del banco como null 
        var clabe = 'NULL';//guarda clabe
        //console.log(clabe);
        guardaClabe = clabe; 
        var ctaBancaria = 'NULL'//guarda cuenta bancaria como null
        //console.log(ctaBancaria);
        guardaCtaBancaria = ctaBancaria;
        var div = document.getElementById('outputDataBanc'); //variable para despues mandar el contenido que obtuvimos
        div.innerHTML += ("<br/> Datos Bancarios nulos <br/>"); //imprime el contenido 
    }
});

var query1 = "\n--select * from template.dbo.ctbcuentas order by idCuenta descidcuenta =@idcproveedor or idcuenta =@idcanticipo \n--select * from inmobiliariacaboballena.dbo.ctbcuentas order by idCuenta desc\n--select * from inmobiliariacaboballena.dbo.AcClientes order by idCliente desc\n--select * from inmobiliariacaboballena.dbo.acproveedores order by idProveedor desc\n--select * from template.dbo.acproveedores order by idProveedor desc\n--select * from alyconstructora.dbo.ctbcuentas order by idCuenta desc\n--select * from alyconstructora.dbo.AcClientes order by idCliente desc\n--select * from alyconstructora.dbo.acproveedores order by idProveedor desc";
var query2="\ndeclare @idcproveedor int\ndeclare @idcanticipo int\nset @idcproveedor = (select MAX(InmobiliariaCaboBallena.dbo.AcProveedores.idProveedor) from InmobiliariaCaboBallena.dbo.AcProveedores);\nset @idcanticipo = (select MAX(InmobiliariaCaboBallena.dbo.CtbCuentas.idCuenta) from InmobiliariaCaboBallena.dbo.CtbCuentas);\nselect @idcproveedor\nselect @idcanticipo"
var query3="\n--idcuenta=@idcproveedor or idcuenta =@idcanticipo\n--update InmobiliariaCaboBallena.dbo.ctbcuentas set toparchequevssaldo = 0 where cuenta = '11801011963'\n--idproveedor=@idcproveedor or idproveedor = 5103 or idproveedor = 5104 or idproveedor = 5105 or idproveedor = 5106 or idproveedor = 5107  or idproveedor = 5108 or idproveedor = 5109 or idproveedor = 5110\n--IDCUENTA=31468\n--IdCliente=5116 or IdCliente = 5118 or IdCliente = 5118 or IdCliente = 5119"
var query4="\nset identity_insert Template.dbo.CtbCuentas on insert into Template.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from InmobiliariaCaboBallena.dbo.CtbCuentas\nwhere idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo\nset identity_insert Template.dbo.CtbCuentas off\nset identity_insert Template.dbo.AcProveedores on insert into Template.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT from InmobiliariaCaboBallena.dbo.AcProveedores\nwhere idproveedor =@idcproveedor\nset identity_insert Template.dbo.AcProveedores off"
var query5 ="\n/*set identity_insert Template.dbo.AcClientes on insert into Template.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from InmobiliariaCaboBallena.dbo.AcClientes where  IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119set identity_insert Template.dbo.AcClientes off*/"
var query6 ="\n--set identity_insert  Template.dbo.CtbCuentas on		insert into  Century_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Template.dbo.CtbCuentas off"
var query7 ="\nset identity_insert  Century_Adm.dbo.CtbCuentas on		insert into  Century_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Century_Adm.dbo.CtbCuentas off"
var query8 ="\nset identity_insert  CenturyPlaza_Adm.dbo.CtbCuentas on		insert into  CenturyPlaza_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  CenturyPlaza_Adm.dbo.CtbCuentas off"
var query9 ="\nset identity_insert  Metropol_Adm.dbo.CtbCuentas on		insert into  Metropol_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Metropol_Adm.dbo.CtbCuentas off"
var query10 ="\nset identity_insert  Metropol_Fid.dbo.CtbCuentas on		insert into  Metropol_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Metropol_Fid.dbo.CtbCuentas off"
var query11 ="\nset identity_insert  Palmas100_Adm.dbo.CtbCuentas on		insert into  Palmas100_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Palmas100_Adm.dbo.CtbCuentas off"
var query12 ="\nset identity_insert  Palmas100_Fid.dbo.CtbCuentas on		insert into  Palmas100_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Palmas100_Fid.dbo.CtbCuentas off"
var query13 ="\nset identity_insert  ParkPlaza_Fid.dbo.CtbCuentas on		insert into  ParkPlaza_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlaza_Fid.dbo.CtbCuentas off"
var query14 ="\nset identity_insert  ParkPlazaSC_Adm.dbo.CtbCuentas on		insert into  ParkPlazaSC_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlazaSC_Adm.dbo.CtbCuentas off"
var query15 ="\nset identity_insert  ParkPlazaSC_Fid.dbo.CtbCuentas on		insert into  ParkPlazaSC_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlazaSC_Fid.dbo.CtbCuentas off"
var query16 ="\nset identity_insert  ParkPlazaT1_Adm.dbo.CtbCuentas on		insert into  ParkPlazaT1_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlazaT1_Adm.dbo.CtbCuentas off"
var query17 ="\nset identity_insert  ParkPlazaT2_Adm.dbo.CtbCuentas on		insert into  ParkPlazaT2_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlazaT2_Adm.dbo.CtbCuentas off"
var query18="\nset identity_insert  ParkPlazaT3_Adm.dbo.CtbCuentas on		insert into  ParkPlazaT3_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlazaT3_Adm.dbo.CtbCuentas off"
var query19="\nset identity_insert  ParkPlazaTres_Adm.dbo.CtbCuentas on		insert into ParkPlazaTres_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ParkPlazaTres_Adm.dbo.CtbCuentas off"
var query20="\nset identity_insert  TdelBosque_Adm.dbo.CtbCuentas on		insert into  TdelBosque_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  TdelBosque_Adm.dbo.CtbCuentas off"
var query21="\nset identity_insert  TdelBosque_Fid.dbo.CtbCuentas on		insert into  TdelBosque_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  TdelBosque_Fid.dbo.CtbCuentas off"
var query22="\nset identity_insert  WorldPlaza_Adm.dbo.CtbCuentas on		insert into  WorldPlaza_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  WorldPlaza_Adm.dbo.CtbCuentas off"
var query23="\nset identity_insert  WorldPlaza_Fid.dbo.CtbCuentas on		insert into  WorldPlaza_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  WorldPlaza_Fid.dbo.CtbCuentas off"
var query24="\nset identity_insert  Zentrum_Adm.dbo.CtbCuentas on		insert into  Zentrum_Adm.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Zentrum_Adm.dbo.CtbCuentas off"
var query25="\nset identity_insert  Zentrum_Fid.dbo.CtbCuentas on		insert into  Zentrum_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Zentrum_Fid.dbo.CtbCuentas off"
var query26="\nset identity_insert  AbrahamHelfonDaniel.dbo.CtbCuentas on		insert into  AbrahamHelfonDaniel.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  AbrahamHelfonDaniel.dbo.CtbCuentas off"
var query27="\nset identity_insert  ACBahlay.dbo.CtbCuentas on		insert into  ACBahlay.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ACBahlay.dbo.CtbCuentas off"
var query28="\nset identity_insert  Administradora89.dbo.CtbCuentas on		insert into  Administradora89.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Administradora89.dbo.CtbCuentas off"
var query28="\nset identity_insert  AdministradoraFGH.dbo.CtbCuentas on		insert into  AdministradoraFGH.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  AdministradoraFGH.dbo.CtbCuentas off"
var query29="\nset identity_insert  AdministradoraDeSitiosEstrategicosMX.dbo.CtbCuentas on		insert into  AdministradoraDeSitiosEstrategicosMX.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  AdministradoraDeSitiosEstrategicosMX.dbo.CtbCuentas off"
var query30="\nset identity_insert  AlyConstructora.dbo.CtbCuentas on		insert into  AlyConstructora.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  AlyConstructora.dbo.CtbCuentas off"
var query31="\nset identity_insert  CCHeldan.dbo.CtbCuentas on		insert into  CCHeldan.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  CCHeldan.dbo.CtbCuentas off"
var query32="\nset identity_insert  ClubTekSantaFe.dbo.CtbCuentas on		insert into  ClubTekSantaFe.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ClubTekSantaFe.dbo.CtbCuentas off"
var query33="\nset identity_insert  DCHeldan.dbo.CtbCuentas on		insert into  DCHeldan.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DCHeldan.dbo.CtbCuentas off"
var query34="\nset identity_insert  DRHeldan.dbo.CtbCuentas on		insert into  DRHeldan.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DRHeldan.dbo.CtbCuentas off"
var query35="\nset identity_insert  GabrielHelfonDaniel.dbo.CtbCuentas on		insert into GabrielHelfonDaniel.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  GabrielHelfonDaniel.dbo.CtbCuentas off"
var query36="\nset identity_insert  GrupoDIORAL.dbo.CtbCuentas on		insert into GrupoDIORAL.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  GrupoDIORAL.dbo.CtbCuentas off"
var query37="\nset identity_insert  GrupoHELDAN.dbo.CtbCuentas on		insert into  GrupoHELDAN.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  GrupoHELDAN.dbo.CtbCuentas off"
var query38="\nset identity_insert  HeldanAdministracion.dbo.CtbCuentas on		insert into  HeldanAdministracion.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HeldanAdministracion.dbo.CtbCuentas off"
var query39="\nset identity_insert  HeldanHospitality.dbo.CtbCuentas on		insert into  HeldanHospitality.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HeldanHospitality.dbo.CtbCuentas off"
var query40="\nset identity_insert  HeldanHolding.dbo.CtbCuentas on		insert into  HeldanHolding.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HeldanHolding.dbo.CtbCuentas off"
var query41="\nset identity_insert  HeldanHR.dbo.CtbCuentas on		insert into  HeldanHR.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HeldanHR.dbo.CtbCuentas off"
var query42="\nset identity_insert  HeldanLeasing.dbo.CtbCuentas on		insert into  HeldanLeasing.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HeldanLeasing.dbo.CtbCuentas off"
var query43="\nset identity_insert  HotelEXPO.dbo.CtbCuentas on		insert into  HotelEXPO.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HotelEXPO.dbo.CtbCuentas off"
var query44="\nset identity_insert  HotelParqueSantaFe.dbo.CtbCuentas on		insert into  HotelParqueSantaFe.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HotelParqueSantaFe.dbo.CtbCuentas off"
var query45="\nset identity_insert  ConstructoraBajaBallena.dbo.CtbCuentas on		insert into  ConstructoraBajaBallena.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ConstructoraBajaBallena.dbo.CtbCuentas off"
var query46 ="\n--set identity_insert  InmobiliariaCaboBallena.dbo.CtbCuentas on		insert into  InmobiliariaCaboBallena.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  InmobiliariaCaboBallena.dbo.CtbCuentas off"
var query47="\nset identity_insert  InmobiliariaHeldan.dbo.CtbCuentas on		insert into  InmobiliariaHeldan.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  InmobiliariaHeldan.dbo.CtbCuentas off"
var query48="\nset identity_insert  InmobiliariaMARLY.dbo.CtbCuentas on		insert into InmobiliariaMARLY.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  InmobiliariaMARLY.dbo.CtbCuentas off"
var query49="\nset identity_insert  MexicoMart_Fid.dbo.CtbCuentas on		insert into  MexicoMart_Fid.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  MexicoMart_Fid.dbo.CtbCuentas off"
var query50="\nset identity_insert  Servicios7HD.dbo.CtbCuentas on		insert into Servicios7HD.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  Servicios7HD.dbo.CtbCuentas off"
var query51="\nset identity_insert  ServiciosDEHD.dbo.CtbCuentas on		insert into  ServiciosDEHD.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ServiciosDEHD.dbo.CtbCuentas off"
var query52="\nset identity_insert  ServiciosDEHEL.dbo.CtbCuentas on		insert into  ServiciosDEHEL.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ServiciosDEHEL.dbo.CtbCuentas off"
var query53="\nset identity_insert  SIHELDAN.dbo.CtbCuentas on		insert into SIHELDAN.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  SIHELDAN.dbo.CtbCuentas off"
var query54="\nset identity_insert  GrupoDEHEL.dbo.CtbCuentas on		insert into GrupoDEHEL.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  GrupoDEHEL.dbo.CtbCuentas off"
var query55="\nset identity_insert  CCDEHEL.dbo.CtbCuentas on		insert into CCDEHEL.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  CCDEHEL.dbo.CtbCuentas off"
var query56="\nset identity_insert  DCDEHEL.dbo.CtbCuentas on		insert into DCDEHEL.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DCDEHEL.dbo.CtbCuentas off"
var query57="\nset identity_insert  DEHELHolding.dbo.CtbCuentas on		insert into DEHELHolding.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DEHELHolding.dbo.CtbCuentas off"
var query58="\nset identity_insert  DEHELImports.dbo.CtbCuentas on		insert into DEHELImports.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DEHELImports.dbo.CtbCuentas off"
var query59="\nset identity_insert  DRDEHEL.dbo.CtbCuentas on		insert into DRDEHEL.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DRDEHEL.dbo.CtbCuentas off"
var query60="\nset identity_insert  DEHELHR.dbo.CtbCuentas on		insert into DEHELHR.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DEHELHR.dbo.CtbCuentas off"
var query61="\nset identity_insert  ComisariatoKanai.dbo.CtbCuentas on		insert into ComisariatoKanai.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  ComisariatoKanai.dbo.CtbCuentas off"
var query62="\nset identity_insert  DesarrolladoraKanai.dbo.CtbCuentas on		insert into DesarrolladoraKanai.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DesarrolladoraKanai.dbo.CtbCuentas off"
var query63 ="\n--set identity_insert  DesarrolladoraKanaiCatorce.dbo.CtbCuentas on		insert into DesarrolladoraKanaiCatorce.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DesarrolladoraKanaiCatorce.dbo.CtbCuentas off"
var query64 ="\n--set identity_insert  DesarrolladoraKanaiQuince.dbo.CtbCuentas on		insert into DesarrolladoraKanaiQuince.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DesarrolladoraKanaiQuince.dbo.CtbCuentas off"
var query65="\nset identity_insert  InmobiliariaKanaiCatorce.dbo.CtbCuentas on		insert into InmobiliariaKanaiCatorce.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  InmobiliariaKanaiCatorce.dbo.CtbCuentas off"
var query66="\nset identity_insert  InmobiliariaKanaiQuince.dbo.CtbCuentas on		insert into InmobiliariaKanaiQuince.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  InmobiliariaKanaiQuince.dbo.CtbCuentas off"
var query67="\nset identity_insert  OperadoraKanaiCatorce.dbo.CtbCuentas on		insert into OperadoraKanaiCatorce.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  OperadoraKanaiCatorce.dbo.CtbCuentas off"
var query68="\nset identity_insert  OperadoraKanaiQuince.dbo.CtbCuentas on		insert into OperadoraKanaiQuince.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  OperadoraKanaiQuince.dbo.CtbCuentas off"
var query69="\nset identity_insert  HeadOfYachts.dbo.CtbCuentas on		insert into HeadOfYachts.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  HeadOfYachts.dbo.CtbCuentas off"
var query70="\nset identity_insert  SWMexicoBacch.dbo.CtbCuentas on		insert into SWMexicoBacch.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  SWMexicoBacch.dbo.CtbCuentas off"
var query71="\nset identity_insert  YachtManager.dbo.CtbCuentas on		insert into YachtManager.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  YachtManager.dbo.CtbCuentas off"
var query72="\nset identity_insert  CorporativoDEHELIV.dbo.CtbCuentas on		insert into CorporativoDEHELIV.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  CorporativoDEHELIV.dbo.CtbCuentas off"
var query73="\nset identity_insert  DEHELDesarrollosIV.dbo.CtbCuentas on		insert into DEHELDesarrollosIV.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DEHELDesarrollosIV.dbo.CtbCuentas off"
var query74="\nset identity_insert  DEHELCorporativoPani.dbo.CtbCuentas on		insert into DEHELCorporativoPani.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DEHELCorporativoPani.dbo.CtbCuentas off"
var query75="\nset identity_insert  DEHELHotelSantaFe.dbo.CtbCuentas on		insert into DEHELHotelSantaFe.dbo.CtbCuentas(idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador) select idCuenta, Cuenta, Descripcion, idTipoCuenta, Acepta_Mov, EsProveedor, EsCliente, ToparChequeVsSaldo, EmisionCheque, idCuentaComplementaria, EsDolares, idTipoMoneda, PermitirDeposito, EsDeudor, SaldoLimiteDeudor, EsAcreedor, EsCuentaIVA, IdConceptoDIOT, PermitirProgramarPago, IdAgaCatIVA, IdCtaCostoTAC, IdAgrupadorSAT, Agrupador from Template.dbo.CtbCuentas where   idcuenta =@idcanticipo-1 or idCuenta =@idcanticipo                             	set identity_insert  DEHELHotelSantaFe.dbo.CtbCuentas off"
var query76 ="\n/*set identity_insert Century_Adm.dbo.AcClientes on insert into Century_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Century_Adm.dbo.AcClientes off"
var query77="\nset identity_insert CenturyPlaza_Adm.dbo.AcClientes on insert into CenturyPlaza_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert CenturyPlaza_Adm.dbo.AcClientes off"
var query78="\nset identity_insert Metropol_Adm.dbo.AcClientes on insert into Metropol_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Metropol_Adm.dbo.AcClientes off"
var query79="\nset identity_insert Metropol_Fid.dbo.AcClientes on insert into Metropol_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Metropol_Fid.dbo.AcClientes off"
var query80="\nset identity_insert Palmas100_Adm.dbo.AcClientes on insert into Palmas100_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Palmas100_Adm.dbo.AcClientes off"
var query81="\nset identity_insert Palmas100_Fid.dbo.AcClientes on insert into Palmas100_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Palmas100_Fid.dbo.AcClientes off"
var query82="\nset identity_insert ParkPlaza_Fid.dbo.AcClientes on insert into ParkPlaza_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlaza_Fid.dbo.AcClientes off"
var query83="\nset identity_insert ParkPlazaSC_Adm.dbo.AcClientes on insert into ParkPlazaSC_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlazaSC_Adm.dbo.AcClientes off"
var query84="\nset identity_insert ParkPlazaSC_Fid.dbo.AcClientes on insert into ParkPlazaSC_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlazaSC_Fid.dbo.AcClientes off"
var query85="\nset identity_insert ParkPlazaT1_Adm.dbo.AcClientes on insert into ParkPlazaT1_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlazaT1_Adm.dbo.AcClientes off"
var query86="\nset identity_insert ParkPlazaT2_Adm.dbo.AcClientes on insert into ParkPlazaT2_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlazaT2_Adm.dbo.AcClientes off"
var query87="\nset identity_insert ParkPlazaT3_Adm.dbo.AcClientes on insert into ParkPlazaT3_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlazaT3_Adm.dbo.AcClientes off"
var query88="\nset identity_insert ParkPlazaTres_Adm.dbo.AcClientes on insert into ParkPlazaTres_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ParkPlazaTres_Adm.dbo.AcClientes off"
var query89="\nset identity_insert TdelBosque_Adm.dbo.AcClientes on insert into TdelBosque_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert TdelBosque_Adm.dbo.AcClientes off"
var query90="\nset identity_insert TdelBosque_Fid.dbo.AcClientes on insert into TdelBosque_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert TdelBosque_Fid.dbo.AcClientes off"
var query91="\nset identity_insert WorldPlaza_Adm.dbo.AcClientes on insert into WorldPlaza_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert WorldPlaza_Adm.dbo.AcClientes off"
var query92="\nset identity_insert WorldPlaza_Fid.dbo.AcClientes on insert into WorldPlaza_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert WorldPlaza_Fid.dbo.AcClientes off"
var query93="\nset identity_insert Zentrum_Adm.dbo.AcClientes on insert into Zentrum_Adm.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Zentrum_Adm.dbo.AcClientes off"
var query94="\nset identity_insert Zentrum_Fid.dbo.AcClientes on insert into Zentrum_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Zentrum_Fid.dbo.AcClientes off"
var query95="\nset identity_insert AbrahamHelfonDaniel.dbo.AcClientes on insert into AbrahamHelfonDaniel.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert AbrahamHelfonDaniel.dbo.AcClientes off"
var query96="\nset identity_insert ACBahlay.dbo.AcClientes on insert into ACBahlay.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ACBahlay.dbo.AcClientes off"
var query97="\nset identity_insert Administradora89.dbo.AcClientes on insert into Administradora89.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert Administradora89.dbo.AcClientes off"
var query98="\nset identity_insert AdministradoraFGH.dbo.AcClientes on insert into AdministradoraFGH.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert AdministradoraFGH.dbo.AcClientes off"
var query99="\nset identity_insert AdministradoraDeSitiosEstrategicosMX.dbo.AcClientes on insert into AdministradoraDeSitiosEstrategicosMX.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert AdministradoraDeSitiosEstrategicosMX.dbo.AcClientes off"
var query100="\nset identity_insert AlyConstructora.dbo.AcClientes on insert into AlyConstructora.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert AlyConstructora.dbo.AcClientes off"
var query101="\nset identity_insert CCHeldan.dbo.AcClientes on insert into CCHeldan.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert CCHeldan.dbo.AcClientes off"
var query102="\nset identity_insert ClubTekSantaFe.dbo.AcClientes on insert into ClubTekSantaFe.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ClubTekSantaFe.dbo.AcClientes off"
var query103="\nset identity_insert DCHeldan.dbo.AcClientes on insert into DCHeldan.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert DCHeldan.dbo.AcClientes off"
var query104="\nset identity_insert DRHeldan.dbo.AcClientes on insert into DRHeldan.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert DRHeldan.dbo.AcClientes off"
var query105="\nset identity_insert  GabrielHelfonDaniel.dbo.AcClientes on insert into GabrielHelfonDaniel.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  GabrielHelfonDaniel.dbo.AcClientes off"
var query106="\nset identity_insert  GrupoDIORAL.dbo.AcClientes on insert into GrupoDIORAL.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  GrupoDIORAL.dbo.AcClientes off"
var query107="\nset identity_insert GrupoHELDAN.dbo.AcClientes on insert into GrupoHELDAN.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert GrupoHELDAN.dbo.AcClientes off"
var query108="\nset identity_insert HeldanAdministracion.dbo.AcClientes on insert into HeldanAdministracion.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HeldanAdministracion.dbo.AcClientes off"
var query109="\nset identity_insert HeldanHospitality.dbo.AcClientes on insert into HeldanHospitality.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HeldanHospitality.dbo.AcClientes off"
var query110="\nset identity_insert HeldanHolding.dbo.AcClientes on insert into HeldanHolding.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HeldanHolding.dbo.AcClientes off"
var query111="\nset identity_insert HeldanHR.dbo.AcClientes on insert into HeldanHR.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HeldanHR.dbo.AcClientes off"
var query112="\nset identity_insert HeldanLeasing.dbo.AcClientes on insert into HeldanLeasing.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HeldanLeasing.dbo.AcClientes off"
var query113="\nset identity_insert HotelEXPO.dbo.AcClientes on insert into HotelEXPO.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HotelEXPO.dbo.AcClientes off"
var query114="\nset identity_insert HotelParqueSantaFe.dbo.AcClientes on insert into HotelParqueSantaFe.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert HotelParqueSantaFe.dbo.AcClientes off"
var query115="\nset identity_insert ConstructoraBajaBallena.dbo.AcClientes on insert into ConstructoraBajaBallena.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ConstructoraBajaBallena.dbo.AcClientes off"
var query116 ="\n--set identity_insert InmobiliariaCaboBallena.dbo.AcClientes on insert into InmobiliariaCaboBallena.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert InmobiliariaCaboBallena.dbo.AcClientes off"
var query117="\nset identity_insert InmobiliariaHeldan.dbo.AcClientes on insert into InmobiliariaHeldan.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert InmobiliariaHeldan.dbo.AcClientes off"
var query118="\nset identity_insert InmobiliariaMARLY.dbo.AcClientes on insert into InmobiliariaMARLY.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert InmobiliariaMARLY.dbo.AcClientes off"
var query119="\nset identity_insert MexicoMart_Fid.dbo.AcClientes on insert into MexicoMart_Fid.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert MexicoMart_Fid.dbo.AcClientes off"
var query120="\nset identity_insert Servicios7HD.dbo.AcClientes on insert into Servicios7HD.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  Servicios7HD.dbo.AcClientes off"
var query121="\nset identity_insert ServiciosDEHD.dbo.AcClientes on insert into ServiciosDEHD.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ServiciosDEHD.dbo.AcClientes off"
var query122="\nset identity_insert ServiciosDEHEL.dbo.AcClientes on insert into ServiciosDEHEL.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ServiciosDEHEL.dbo.AcClientes off"
var query123="\nset identity_insert SIHELDAN.dbo.AcClientes on insert into SIHELDAN.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  SIHELDAN.dbo.AcClientes off"
var query124="\nset identity_insert  GrupoDEHEL.dbo.AcClientes on insert into GrupoDEHEL.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  GrupoDEHEL.dbo.AcClientes off"
var query125="\nset identity_insert  CCDEHEL.dbo.AcClientes on insert into CCDEHEL.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  CCDEHEL.dbo.AcClientes off"
var query126="\nset identity_insert  DCDEHEL.dbo.AcClientes on insert into DCDEHEL.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DCDEHEL.dbo.AcClientes off"
var query127="\nset identity_insert  DEHELHolding.dbo.AcClientes on insert into DEHELHolding.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DEHELHolding.dbo.AcClientes off"
var query128="\nset identity_insert  DEHELImports.dbo.AcClientes on insert into DEHELImports.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DEHELImports.dbo.AcClientes off"
var query129="\nset identity_insert  DRDEHEL.dbo.AcClientes on insert into DRDEHEL.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DRDEHEL.dbo.AcClientes off"
var query130="\nset identity_insert  DEHELHR.dbo.AcClientes on insert into DEHELHR.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DEHELHR.dbo.AcClientes off"
var query131="\nset identity_insert ComisariatoKanai.dbo.AcClientes on insert into ComisariatoKanai.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert ComisariatoKanai.dbo.AcClientes off"
var query132="\nset identity_insert  DesarrolladoraKanai.dbo.AcClientes on insert into DesarrolladoraKanai.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DesarrolladoraKanai.dbo.AcClientes off"
var query133 ="\n--set identity_insert  DesarrolladoraKanaiCatorce.dbo.AcClientes on insert into DesarrolladoraKanaiCatorce.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DesarrolladoraKanaiCatorce.dbo.AcClientes off"
var query134 ="\n--set identity_insert  DesarrolladoraKanaiQuince.dbo.AcClientes on insert into DesarrolladoraKanaiQuince.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DesarrolladoraKanaiQuince.dbo.AcClientes off"
var query135="\nset identity_insert  InmobiliariaKanaiCatorce.dbo.AcClientes on insert into InmobiliariaKanaiCatorce.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  InmobiliariaKanaiCatorce.dbo.AcClientes off"
var query136="\nset identity_insert  InmobiliariaKanaiQuince.dbo.AcClientes on insert into InmobiliariaKanaiQuince.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  InmobiliariaKanaiQuince.dbo.AcClientes off"
var query137="\nset identity_insert  OperadoraKanaiCatorce.dbo.AcClientes on insert into OperadoraKanaiCatorce.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  OperadoraKanaiCatorce.dbo.AcClientes off"
var query138="\nset identity_insert  OperadoraKanaiQuince.dbo.AcClientes on insert into OperadoraKanaiQuince.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  OperadoraKanaiQuince.dbo.AcClientes off"
var query139="\nset identity_insert  HeadOfYachts.dbo.AcClientes on insert into HeadOfYachts.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  HeadOfYachts.dbo.AcClientes off"
var query140="\nset identity_insert SWMexicoBacch.dbo.AcClientes on insert into SWMexicoBacch.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert SWMexicoBacch.dbo.AcClientes off"
var query141="\nset identity_insert YachtManager.dbo.AcClientes on insert into YachtManager.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert YachtManager.dbo.AcClientes off"
var query142="\nset identity_insert  CorporativoDEHELIV.dbo.AcClientes on insert into CorporativoDEHELIV.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  CorporativoDEHELIV.dbo.AcClientes off"
var query143="\nset identity_insert  DEHELDesarrollosIV.dbo.AcClientes on insert into DEHELDesarrollosIV.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DEHELDesarrollosIV.dbo.AcClientes off"
var query144="\nset identity_insert  DEHELCorporativoPani.dbo.AcClientes on insert into DEHELCorporativoPani.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DEHELCorporativoPani.dbo.AcClientes off"
var query145="\nset identity_insert  DEHELHotelSantaFe.dbo.AcClientes on insert into DEHELHotelSantaFe.dbo.AcClientes  (IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt) select IdCliente,Cliente,idTipoCliente,IdCuenta,IdCuentaAnticipo,IdCuentaFONGAR,idTipoMoneda,RazonSocial,Nombre,ApellidoPaterno,ApellidoMaterno,RFC,CURP,LimiteCredito,DiasCredito,Calificacion,PagoElectronico,Area,Direccion,NoExterior,NoInterior,Colonia,Localidad,Referencia,IdEstado,Pais,CodigoPostal,Delegacion,IdCiudad,Telefono,Fax,Mail,Web,Contacto,TelefonoContacto,PinContacto,MailContacto,PersonaFisica,DireccionEnvio,ColoniaEnvio,CodigoPostalEnvio,DelegacionEnvio,IdCiudadEnvio,TelefonoEnvio,FaxEnvio,EntreCallesEnvio,DireccionCobranza,ColoniaCobranza,CodigoPostalCobranza,DelegacionCobranza,IdCiudadCobranza,TelefonoCobranza,FaxCobranza,EntreCallesCobranza,NumCtaPago,CuentaBancaria,IdBancoSAT,MonedaSATDefault,BancoSAt  from Template.dbo.AcClientes where IdCliente=5116 or IdCliente=5118 or IdCliente=5118 or IdCliente=5119 set identity_insert  DEHELHotelSantaFe.dbo.AcClientes off */"
var query146="\nset identity_insert Century_Adm.dbo.AcProveedores on	insert into Century_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Century_Adm.dbo.AcProveedores off"
var query147="\nset identity_insert CenturyPlaza_Adm.dbo.AcProveedores on	insert into CenturyPlaza_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert CenturyPlaza_Adm.dbo.AcProveedores off"
var query148="\nset identity_insert Metropol_Adm.dbo.AcProveedores on	insert into Metropol_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Metropol_Adm.dbo.AcProveedores off"
var query149="\nset identity_insert Metropol_Fid.dbo.AcProveedores on	insert into Metropol_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Metropol_Fid.dbo.AcProveedores off"
var query150="\nset identity_insert Palmas100_Adm.dbo.AcProveedores on	insert into Palmas100_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Palmas100_Adm.dbo.AcProveedores off"
var query151="\nset identity_insert Palmas100_Fid.dbo.AcProveedores on	insert into Palmas100_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Palmas100_Fid.dbo.AcProveedores off"
var query152="\nset identity_insert ParkPlaza_Fid.dbo.AcProveedores on	insert into ParkPlaza_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlaza_Fid.dbo.AcProveedores off"
var query153="\nset identity_insert ParkPlazaSC_Adm.dbo.AcProveedores on	insert into ParkPlazaSC_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlazaSC_Adm.dbo.AcProveedores off"
var query154="\nset identity_insert ParkPlazaSC_Fid.dbo.AcProveedores on	insert into ParkPlazaSC_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlazaSC_Fid.dbo.AcProveedores off"
var query155="\nset identity_insert ParkPlazaT1_Adm.dbo.AcProveedores on	insert into ParkPlazaT1_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlazaT1_Adm.dbo.AcProveedores off"
var query156="\nset identity_insert ParkPlazaT2_Adm.dbo.AcProveedores on	insert into ParkPlazaT2_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlazaT2_Adm.dbo.AcProveedores off"
var query157="\nset identity_insert ParkPlazaT3_Adm.dbo.AcProveedores on	insert into ParkPlazaT3_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlazaT3_Adm.dbo.AcProveedores off"
var query158="\nset identity_insert ParkPlazaTres_Adm.dbo.AcProveedores on	insert into ParkPlazaTres_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ParkPlazaTres_Adm.dbo.AcProveedores off"
var query159="\nset identity_insert TdelBosque_Adm.dbo.AcProveedores on	insert into TdelBosque_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert TdelBosque_Adm.dbo.AcProveedores off"
var query160="\nset identity_insert TdelBosque_Fid.dbo.AcProveedores on	insert into TdelBosque_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert TdelBosque_Fid.dbo.AcProveedores off"
var query161="\nset identity_insert WorldPlaza_Adm.dbo.AcProveedores on	insert into WorldPlaza_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert WorldPlaza_Adm.dbo.AcProveedores off"
var query162="\nset identity_insert WorldPlaza_Fid.dbo.AcProveedores on	insert into WorldPlaza_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert WorldPlaza_Fid.dbo.AcProveedores off"
var query163="\nset identity_insert Zentrum_Adm.dbo.AcProveedores on	insert into Zentrum_Adm.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Zentrum_Adm.dbo.AcProveedores off"
var query164="\nset identity_insert Zentrum_Fid.dbo.AcProveedores on	insert into Zentrum_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Zentrum_Fid.dbo.AcProveedores off"
var query165="\nset identity_insert AbrahamHelfonDaniel.dbo.AcProveedores on	insert into AbrahamHelfonDaniel.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert AbrahamHelfonDaniel.dbo.AcProveedores off"
var query166="\nset identity_insert ACBahlay.dbo.AcProveedores on	insert into ACBahlay.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ACBahlay.dbo.AcProveedores off"
var query167="\nset identity_insert Administradora89.dbo.AcProveedores on	insert into Administradora89.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert Administradora89.dbo.AcProveedores off"
var query168="\nset identity_insert AdministradoraFGH.dbo.AcProveedores on	insert into AdministradoraFGH.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert AdministradoraFGH.dbo.AcProveedores off"
var query169="\nset identity_insert AdministradoraDeSitiosEstrategicosMX.dbo.AcProveedores on	insert into AdministradoraDeSitiosEstrategicosMX.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert AdministradoraDeSitiosEstrategicosMX.dbo.AcProveedores off"
var query170="\nset identity_insert AlyConstructora.dbo.AcProveedores on	insert into AlyConstructora.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert AlyConstructora.dbo.AcProveedores off"
var query171="\nset identity_insert CCHeldan.dbo.AcProveedores on	insert into CCHeldan.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert CCHeldan.dbo.AcProveedores off"
var query172="\nset identity_insert ClubTekSantaFe.dbo.AcProveedores on	insert into ClubTekSantaFe.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ClubTekSantaFe.dbo.AcProveedores off"
var query173="\nset identity_insert DCHeldan.dbo.AcProveedores on	insert into DCHeldan.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert DCHeldan.dbo.AcProveedores off"
var query174="\nset identity_insert DRHeldan.dbo.AcProveedores on	insert into DRHeldan.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert DRHeldan.dbo.AcProveedores off"
var query175="\nset identity_insert  GabrielHelfonDaniel.dbo.AcProveedores on	insert into GabrielHelfonDaniel.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  GabrielHelfonDaniel.dbo.AcProveedores off"
var query176="\nset identity_insert GrupoDIORAL.dbo.AcProveedores on	insert into GrupoDIORAL.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  GrupoDIORAL.dbo.AcProveedores off"
var query177="\nset identity_insert GrupoHELDAN.dbo.AcProveedores on	insert into GrupoHELDAN.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert GrupoHELDAN.dbo.AcProveedores off"
var query178="\nset identity_insert HeldanAdministracion.dbo.AcProveedores on	insert into HeldanAdministracion.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HeldanAdministracion.dbo.AcProveedores off"
var query179="\nset identity_insert HeldanHospitality.dbo.AcProveedores on	insert into HeldanHospitality.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HeldanHospitality.dbo.AcProveedores off"
var query180="\nset identity_insert HeldanHolding.dbo.AcProveedores on	insert into HeldanHolding.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HeldanHolding.dbo.AcProveedores off"
var query181="\nset identity_insert HeldanHR.dbo.AcProveedores on	insert into HeldanHR.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HeldanHR.dbo.AcProveedores off"
var query182="\nset identity_insert HeldanLeasing.dbo.AcProveedores on	insert into HeldanLeasing.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HeldanLeasing.dbo.AcProveedores off"
var query183="\nset identity_insert HotelEXPO.dbo.AcProveedores on	insert into HotelEXPO.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HotelEXPO.dbo.AcProveedores off"
var query184="\nset identity_insert HotelParqueSantaFe.dbo.AcProveedores on	insert into HotelParqueSantaFe.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert HotelParqueSantaFe.dbo.AcProveedores off"
var query185="\nset identity_insert ConstructoraBajaBallena.dbo.AcProveedores on	insert into ConstructoraBajaBallena.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ConstructoraBajaBallena.dbo.AcProveedores off"
var query186 ="\n--set identity_insert InmobiliariaCaboBallena.dbo.AcProveedores on	insert into InmobiliariaCaboBallena.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert InmobiliariaCaboBallena.dbo.AcProveedores off"
var query187="\nset identity_insert InmobiliariaHeldan.dbo.AcProveedores on	insert into InmobiliariaHeldan.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert InmobiliariaHeldan.dbo.AcProveedores off"
var query188="\nset identity_insert InmobiliariaMARLY.dbo.AcProveedores on	insert into InmobiliariaMARLY.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert InmobiliariaMARLY.dbo.AcProveedores off"
var query189="\nset identity_insert MexicoMart_Fid.dbo.AcProveedores on	insert into MexicoMart_Fid.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert MexicoMart_Fid.dbo.AcProveedores off"
var query190="\nset identity_insert Servicios7HD.dbo.AcProveedores on	insert into Servicios7HD.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  Servicios7HD.dbo.AcProveedores off"
var query191="\nset identity_insert ServiciosDEHD.dbo.AcProveedores on	insert into ServiciosDEHD.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ServiciosDEHD.dbo.AcProveedores off"
var query192="\nset identity_insert ServiciosDEHEL.dbo.AcProveedores on	insert into ServiciosDEHEL.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert ServiciosDEHEL.dbo.AcProveedores off"
var query193="\nset identity_insert SIHELDAN.dbo.AcProveedores on	insert into SIHELDAN.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  SIHELDAN.dbo.AcProveedores off"
var query194="\nset identity_insert  GrupoDEHEL.dbo.AcProveedores on	insert into GrupoDEHEL.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  GrupoDEHEL.dbo.AcProveedores off"
var query195="\nset identity_insert  CCDEHEL.dbo.AcProveedores on	insert into CCDEHEL.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  CCDEHEL.dbo.AcProveedores off"
var query196="\nset identity_insert  DCDEHEL.dbo.AcProveedores on	insert into DCDEHEL.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DCDEHEL.dbo.AcProveedores off"
var query197="\nset identity_insert  DEHELHolding.dbo.AcProveedores on	insert into DEHELHolding.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DEHELHolding.dbo.AcProveedores off"
var query198="\nset identity_insert  DEHELImports.dbo.AcProveedores on	insert into DEHELImports.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DEHELImports.dbo.AcProveedores off"
var query199="\nset identity_insert  DRDEHEL.dbo.AcProveedores on	insert into DRDEHEL.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DRDEHEL.dbo.AcProveedores off"
var query200="\nset identity_insert  DEHELHR.dbo.AcProveedores on	insert into DEHELHR.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DEHELHR.dbo.AcProveedores off"
var query201="\nset identity_insert  ComisariatoKanai.dbo.AcProveedores on	insert into ComisariatoKanai.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  ComisariatoKanai.dbo.AcProveedores off"
var query202="\nset identity_insert  DesarrolladoraKanai.dbo.AcProveedores on	insert into DesarrolladoraKanai.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DesarrolladoraKanai.dbo.AcProveedores off"
var query203 ="\n--set identity_insert  DesarrolladoraKanaiCatorce.dbo.AcProveedores on	insert into DesarrolladoraKanaiCatorce.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DesarrolladoraKanaiCatorce.dbo.AcProveedores off"
var query204 ="\n--set identity_insert  DesarrolladoraKanaiQuince.dbo.AcProveedores on	insert into DesarrolladoraKanaiQuince.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DesarrolladoraKanaiQuince.dbo.AcProveedores off"
var query205="\nset identity_insert  InmobiliariaKanaiCatorce.dbo.AcProveedores on	insert into InmobiliariaKanaiCatorce.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  InmobiliariaKanaiCatorce.dbo.AcProveedores off"
var query206="\nset identity_insert  InmobiliariaKanaiQuince.dbo.AcProveedores on	insert into InmobiliariaKanaiQuince.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  InmobiliariaKanaiQuince.dbo.AcProveedores off"
var query207="\nset identity_insert  OperadoraKanaiCatorce.dbo.AcProveedores on	insert into OperadoraKanaiCatorce.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  OperadoraKanaiCatorce.dbo.AcProveedores off"
var query208="\nset identity_insert  OperadoraKanaiQuince.dbo.AcProveedores on	insert into OperadoraKanaiQuince.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  OperadoraKanaiQuince.dbo.AcProveedores off"
var query209="\nset identity_insert  HeadOfYachts.dbo.AcProveedores on	insert into HeadOfYachts.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  HeadOfYachts.dbo.AcProveedores off"
var query210="\nset identity_insert  SWMexicoBacch.dbo.AcProveedores on	insert into SWMexicoBacch.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  SWMexicoBacch.dbo.AcProveedores off"
var query211="\nset identity_insert  YachtManager.dbo.AcProveedores on	insert into YachtManager.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  YachtManager.dbo.AcProveedores off"
var query212="\nset identity_insert  CorporativoDEHELIV.dbo.AcProveedores on	insert into CorporativoDEHELIV.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  CorporativoDEHELIV.dbo.AcProveedores off"
var query213="\nset identity_insert  DEHELDesarrollosIV.dbo.AcProveedores on	insert into DEHELDesarrollosIV.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DEHELDesarrollosIV.dbo.AcProveedores off"
var query214="\nset identity_insert  DEHELCorporativoPani.dbo.AcProveedores on	insert into DEHELCorporativoPani.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DEHELCorporativoPani.dbo.AcProveedores off"
var query215="\nset identity_insert  DEHELHotelSantaFe.dbo.AcProveedores on	insert into DEHELHotelSantaFe.dbo.AcProveedores(idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT) select idProveedor, Codigo, RazonSocial, idGiro, idTipoProveedor, Rfc, idCiudad, Direccion, Colonia, CodPost, Delegacion, Telefono, Fax, Mail, LimiteCredito, DiasCredito, DiasEntrega, CalifPuntualidad, CalifCalidad, Contacto, NombreJefe, PuestoJefe, Observaciones, RegistroPatronal, RegistroCamara, Infonavit, TipoFiscal, idTipoMoneda, Nombre, ApellidoPaterno, ApellidoMaterno, Celular, PaginaWeb, CondicionesPago, PersonaMoral, CURP, PersonasAtiendenPedidos, Suspendido, IdCuentaProveedor, IdCuentaAnticipo, IdCuentaFonGar, IdCuentaDeudor, ConPagoElectronico, CLABE, Banco, IdTipoTerceros, IdTipoOperacion, GastosFinancieros, ClaveCliente, CodigoSAP, IdAgaCatAcreedor, PermitirExentoIVA, CuentaBancaria, IdBancoSAT, MonedaSATDefault, BancoSAT  from Template.dbo.AcProveedores where idproveedor =@idcproveedor   	set identity_insert  DEHELHotelSantaFe.dbo.AcProveedores off"

var querytotal = query1 + query2 + query3 + query4 + query5 + query6 + query7 + query8 + query9 + query10 + query11 + query12 + query13 + query14 + query15 + query16 + query17 + query18 + query19 + query20 + query21 + query22 + query23 + query24 + query25 + query26 + query27 + query28 + query29 + query30 + query31 + query32 + query33 + query34 + query35 + query36 + query37 + query38 + query39 + query40 + query41 + query42 + query43 + query44 + query45 + query46 + query47 + query48 + query49 + query50 + query51 + query52 + query53 + query54 + query55 + query56 + query57 + query58 + query59 + query60 + query61 + query62 + query63 + query64 + query65 + query66 + query67 + query68 + query69 + query70 + query71 + query72 + query73 + query74 + query75 + query76 + query77 + query78 + query79 + query80 + query81 + query82 + query83 + query84 + query85 + query86 + query87 + query88 + query89 + query90 + query91 + query92 + query93 + query94 + query95 + query96 + query97 + query98 + query99 + query100 + query101 + query102 + query103 + query104 + query105 + query106 + query107 + query108 + query109 + query110 + query111 + query112 + query113 + query114 + query115 + query116 + query117 + query118 + query119 + query120 + query121 + query122 + query123 + query124 + query125 + query126 + query127 + query128 + query129 + query130 + query131 + query132 + query133 + query134 + query135 + query136 + query137 + query138 + query139 + query140 + query141 + query142 + query143 + query144 + query145 + query146 + query147 + query148 + query149 + query150 + query151 + query152 + query153 + query154 + query155 + query156 + query157 + query158 + query159 + query160 + query161 + query162 + query163 + query164 + query165 + query166 + query167 + query168 + query169 + query170 + query171 + query172 + query173 + query174 + query175 + query176 + query177 + query178 + query179 + query180 + query181 + query182 + query183 + query184 + query185 + query186 + query187 + query188 + query189 + query190 + query191 + query192 + query193 + query194 + query195 + query196 + query197 + query198 + query199 + query200 + query201 + query202 + query203 + query204 + query205 + query206 + query207 + query208 + query209 + query210 + query211 + query212 + query213 + query214 + query215

//console.log(querytotal)

window.document.title = 'CSF-QUERY-ALHEL';//nombre de la pestaña